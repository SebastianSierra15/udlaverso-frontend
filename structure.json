{
  "src": {
    "components": {
      "Admin": {
        "atoms": {
          "BotonAdmin.tsx": "import React from \"react\";\r\n\r\ntype Variante = \"principal\" | \"secundario\" | \"peligro\";\r\n\r\ninterface Props {\r\n  texto: string;\r\n  onClick: () => void;\r\n  variante?: Variante;\r\n  icono?: React.ReactNode;\r\n  claseExtra?: string;\r\n}\r\n\r\nconst coloresPorVariante: Record<Variante, string> = {\r\n  principal:\r\n    \"bg-udlaverso-verde text-white hover:bg-udlaverso-verde/90 focus:ring-2 focus:ring-udlaverso-verde/50\",\r\n  secundario:\r\n    \"bg-gray-100 text-udlaverso-negro hover:bg-gray-200 focus:ring-2 focus:ring-gray-300\",\r\n  peligro:\r\n    \"bg-red-600 text-white hover:bg-red-700 focus:ring-2 focus:ring-red-400\",\r\n};\r\n\r\nconst BotonAdmin: React.FC<Props> = ({\r\n  texto,\r\n  onClick,\r\n  variante = \"principal\",\r\n  icono,\r\n  claseExtra = \"\",\r\n}) => (\r\n  <button\r\n    onClick={onClick}\r\n    className={`flex items-center justify-center gap-2 text-sm font-medium px-4 py-2 rounded-lg shadow-sm transition ${coloresPorVariante[variante]} ${claseExtra}`}\r\n  >\r\n    {icono && <span className=\"text-base\">{icono}</span>}\r\n    {texto}\r\n  </button>\r\n);\r\n\r\nexport default BotonAdmin;\r\n",
          "BotonFlecha.tsx": "import React from \"react\";\r\nimport { FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\r\n\r\ntype Props = {\r\n  direccion: \"left\" | \"right\";\r\n  onClick: () => void;\r\n  deshabilitado?: boolean;\r\n};\r\n\r\nconst BotonFlecha: React.FC<Props> = ({\r\n  direccion,\r\n  onClick,\r\n  deshabilitado,\r\n}) => {\r\n  const Icono = direccion === \"left\" ? FaChevronLeft : FaChevronRight;\r\n\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      disabled={deshabilitado}\r\n      className={`flex items-center justify-center w-8 h-8 rounded-full\r\n        bg-udlaverso-verde text-white shadow hover:bg-udlaverso-verde/90\r\n        transition disabled:opacity-40 disabled:cursor-not-allowed`}\r\n      title={direccion === \"left\" ? \"Anterior\" : \"Siguiente\"}\r\n    >\r\n      <Icono size={14} />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default BotonFlecha;\r\n",
          "BotonPagina.tsx": "type Props = {\r\n  activo?: boolean;\r\n  deshabilitado?: boolean;\r\n  onClick: () => void;\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst BotonPagina: React.FC<Props> = ({\r\n  activo = false,\r\n  deshabilitado = false,\r\n  onClick,\r\n  children,\r\n}) => (\r\n  <button\r\n    onClick={onClick}\r\n    disabled={deshabilitado}\r\n    className={`w-8 h-8 rounded-full text-sm font-medium transition ${\r\n      activo\r\n        ? \"bg-udlaverso-verde text-white\"\r\n        : \"border text-udlaverso-gris hover:bg-gray-100\"\r\n    } disabled:opacity-50`}\r\n  >\r\n    {children}\r\n  </button>\r\n);\r\n\r\nexport default BotonPagina;\r\n",
          "CampoTexto.tsx": "import TooltipInfo from \"./TooltipInfo\";\r\n\r\ntype Props = {\r\n  label: string;\r\n  placeholder?: string;\r\n  maxLength?: number;\r\n  value: string;\r\n  onChange: (v: string) => void;\r\n  tooltip?: string;\r\n};\r\n\r\nconst CampoTexto: React.FC<Props> = ({\r\n  label,\r\n  placeholder,\r\n  maxLength,\r\n  value,\r\n  onChange,\r\n  tooltip,\r\n}) => (\r\n  <div>\r\n    <label className=\"text-sm font-semibold text-gray-700 mb-1 flex items-center gap-1\">\r\n      {label}\r\n      {tooltip && <TooltipInfo texto={tooltip} />}\r\n    </label>\r\n\r\n    <input\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={(e) => onChange(e.target.value)}\r\n      placeholder={placeholder}\r\n      maxLength={maxLength}\r\n      className=\"w-full border rounded-lg px-3 py-2 focus:ring-udlaverso-verde focus:border-udlaverso-verde outline-none\"\r\n    />\r\n\r\n    {maxLength && (\r\n      <p\r\n        className={`text-xs text-right mt-1 ${\r\n          value.length >= maxLength ? \"text-red-600\" : \"text-gray-500\"\r\n        }`}\r\n      >\r\n        {value.length} / {maxLength} caracteres\r\n      </p>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default CampoTexto;\r\n",
          "CampoTextoArea.tsx": "import TooltipInfo from \"./TooltipInfo\";\r\n\r\ntype Props = {\r\n  label: string;\r\n  placeholder?: string;\r\n  maxLength?: number;\r\n  filas?: number;\r\n  value: string;\r\n  onChange: (v: string) => void;\r\n  tooltip?: string;\r\n};\r\n\r\nconst CampoTextoArea: React.FC<Props> = ({\r\n  label,\r\n  placeholder,\r\n  maxLength,\r\n  filas = 4,\r\n  value,\r\n  onChange,\r\n  tooltip,\r\n}) => (\r\n  <div>\r\n    <label className=\"text-sm font-semibold text-gray-700 mb-1 flex items-center gap-1\">\r\n      {label}\r\n      {tooltip && <TooltipInfo texto={tooltip} />}\r\n    </label>\r\n\r\n    <textarea\r\n      value={value}\r\n      onChange={(e) => onChange(e.target.value)}\r\n      placeholder={placeholder}\r\n      rows={filas}\r\n      maxLength={maxLength}\r\n      className=\"w-full border rounded-lg px-3 py-2 resize-none focus:ring-udlaverso-verde focus:border-udlaverso-verde outline-none\"\r\n    />\r\n\r\n    {maxLength && (\r\n      <p\r\n        className={`text-xs text-right mt-1 ${\r\n          value.length >= maxLength ? \"text-red-600\" : \"text-gray-500\"\r\n        }`}\r\n      >\r\n        {value.length} / {maxLength} caracteres\r\n      </p>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default CampoTextoArea;\r\n",
          "EtiquetaMini.tsx": "type Props = { children: React.ReactNode };\r\n\r\nconst EtiquetaMini: React.FC<Props> = ({ children }) => (\r\n  <span className=\"text-xs uppercase tracking-wide text-udlaverso-gris\">\r\n    {children}\r\n  </span>\r\n);\r\n\r\nexport default EtiquetaMini;\r\n",
          "EtiquetaSeleccion.tsx": "import { FaTimes } from \"react-icons/fa\";\r\nimport React from \"react\";\r\n\r\ntype Props = {\r\n  texto: string;\r\n  onRemove: () => void;\r\n};\r\n\r\nconst EtiquetaSeleccion: React.FC<Props> = ({ texto, onRemove }) => (\r\n  <div className=\"flex items-center bg-udlaverso-verde/10 text-udlaverso-verde font-medium text-sm px-3 py-1 rounded-full gap-2\">\r\n    <span>{texto}</span>\r\n    <button\r\n      onClick={onRemove}\r\n      className=\"text-udlaverso-verde hover:text-udlaverso-negro transition\"\r\n      title=\"Eliminar categoría\"\r\n    >\r\n      <FaTimes size={12} />\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default EtiquetaSeleccion;\r\n",
          "InsigniaEstado.tsx": "type Props = { estado: \"activo\" | \"inactivo\" };\r\n\r\nconst colores: Record<Props[\"estado\"], string> = {\r\n  activo: \"bg-green-100 text-green-700\",\r\n  inactivo: \"bg-red-100 text-red-600\",\r\n};\r\n\r\nconst InsigniaEstado: React.FC<Props> = ({ estado }) => (\r\n  <span\r\n    className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-semibold ${colores[estado]}`}\r\n  >\r\n    {estado}\r\n  </span>\r\n);\r\n\r\nexport default InsigniaEstado;\r\n",
          "LabelConTooltip.tsx": "import React from \"react\";\r\nimport TooltipInfo from \"../atoms/TooltipInfo\";\r\n\r\ntype Props = {\r\n  texto: string;\r\n  tooltip?: string;\r\n  obligatorio?: boolean;\r\n};\r\n\r\nconst LabelConTooltip: React.FC<Props> = ({ texto, tooltip, obligatorio }) => {\r\n  return (\r\n    <label className=\"text-sm font-semibold text-gray-700 flex items-center gap-1\">\r\n      {texto}\r\n      {obligatorio && <span className=\"text-red-500\">*</span>}\r\n      {tooltip && <TooltipInfo texto={tooltip} />}\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default LabelConTooltip;\r\n",
          "SelectorCantidad.tsx": "type Props = {\r\n  valor: number;\r\n  onChange: (v: number) => void;\r\n  nombreEntidad?: string;\r\n};\r\n\r\nconst SelectorCantidad: React.FC<Props> = ({\r\n  valor,\r\n  onChange,\r\n  nombreEntidad = \"registros\",\r\n}) => (\r\n  <div className=\"flex items-center gap-2 text-sm text-udlaverso-gris\">\r\n    <span>Mostrar</span>\r\n    <select\r\n      value={valor}\r\n      onChange={(e) => onChange(Number(e.target.value))}\r\n      className=\"border rounded-md px-2 py-1 text-sm focus:ring-udlaverso-verde outline-none\"\r\n    >\r\n      {[5, 10, 20].map((n) => (\r\n        <option key={n} value={n}>\r\n          {n}\r\n        </option>\r\n      ))}\r\n    </select>\r\n    <span>{nombreEntidad} por página</span>\r\n  </div>\r\n);\r\n\r\nexport default SelectorCantidad;\r\n",
          "TooltipInfo.tsx": "import { FaCircleInfo } from \"react-icons/fa6\";\r\nimport React from \"react\";\r\n\r\ntype Props = {\r\n  texto: string;\r\n};\r\n\r\nconst TooltipInfo: React.FC<Props> = ({ texto }) => (\r\n  <span className=\"relative group inline-flex items-center ml-1 text-udlaverso-verde cursor-pointer\">\r\n    <FaCircleInfo size={14} />\r\n    <span className=\"absolute left-5 top-1/2 -translate-y-1/2 hidden group-hover:block bg-gray-800 text-white text-xs rounded-md px-2 py-1 whitespace-nowrap z-10\">\r\n      {texto}\r\n    </span>\r\n  </span>\r\n);\r\n\r\nexport default TooltipInfo;\r\n",
          "VistaPreviaImagen.tsx": "import React from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\ntype Props = {\r\n  src: string;\r\n  alt?: string;\r\n  onRemove?: () => void;\r\n};\r\n\r\nconst VistaPreviaImagen: React.FC<Props> = ({\r\n  src,\r\n  alt = \"Imagen\",\r\n  onRemove,\r\n}) => (\r\n  <div className=\"relative group w-32 h-32 rounded-lg overflow-hidden border border-gray-200 shadow-sm\">\r\n    <img\r\n      src={src}\r\n      alt={alt}\r\n      className=\"w-full h-full object-cover transition-transform duration-300 group-hover:scale-105\"\r\n    />\r\n    {onRemove && (\r\n      <button\r\n        onClick={onRemove}\r\n        className=\"absolute top-1 right-1 bg-white/80 text-red-600 rounded-full p-1 hover:bg-red-100 transition\"\r\n        title=\"Eliminar imagen\"\r\n      >\r\n        <FaTimes size={12} />\r\n      </button>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default VistaPreviaImagen;\r\n"
        },
        "molecules": {
          "BarraAcciones.tsx": "import { useNavigate } from \"react-router-dom\";\r\nimport BotonAdmin from \"../atoms/BotonAdmin\";\r\n\r\ntype Props = {\r\n  onNuevo?: () => void;\r\n  onBuscar: (v: string) => void;\r\n  placeholder?: string;\r\n};\r\n\r\nconst BarraAcciones: React.FC<Props> = ({\r\n  onNuevo,\r\n  onBuscar,\r\n  placeholder = \"Buscar...\",\r\n}) => {\r\n  const navigate = useNavigate();\r\n\r\n  const manejarNuevo = () => {\r\n    if (onNuevo) onNuevo();\r\n    navigate(\"/admin/proyectos/nuevo-proyecto\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col sm:flex-row items-stretch sm:items-center gap-3\">\r\n      <div className=\"flex-1\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => onBuscar(e.target.value)}\r\n          placeholder={placeholder}\r\n          className=\"w-full px-3 py-2 border rounded-md text-sm focus:ring-2 focus:ring-udlaverso-verde outline-none\"\r\n        />\r\n      </div>\r\n\r\n      <BotonAdmin\r\n        texto=\"Nuevo\"\r\n        onClick={manejarNuevo}\r\n        variante=\"principal\"\r\n        claseExtra=\"w-full sm:w-auto\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarraAcciones;\r\n",
          "CampoEtiquetas.tsx": "import React, { useState } from \"react\";\r\nimport EtiquetaSeleccion from \"../atoms/EtiquetaSeleccion\";\r\nimport TooltipInfo from \"../atoms/ToolTipInfo\";\r\n\r\ntype Props = {\r\n  label: string;\r\n  placeholder?: string;\r\n  tooltip?: string;\r\n  valores: string[];\r\n  onChange: (valores: string[]) => void;\r\n  maxEtiquetas?: number;\r\n};\r\n\r\nconst CampoEtiquetas: React.FC<Props> = ({\r\n  label,\r\n  placeholder,\r\n  tooltip,\r\n  valores,\r\n  onChange,\r\n  maxEtiquetas,\r\n}) => {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const agregarEtiqueta = (valor: string) => {\r\n    const limpio = valor.trim();\r\n    if (limpio && !valores.includes(limpio)) {\r\n      if (!maxEtiquetas || valores.length < maxEtiquetas) {\r\n        onChange([...valores, limpio]);\r\n      }\r\n    }\r\n    setInput(\"\");\r\n  };\r\n\r\n  const eliminarEtiqueta = (valor: string) => {\r\n    onChange(valores.filter((v) => v !== valor));\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === \"Enter\" || e.key === \",\") {\r\n      e.preventDefault();\r\n      agregarEtiqueta(input);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label className=\"text-sm font-semibold text-gray-700 mb-1 flex items-center gap-1\">\r\n        {label}\r\n        {tooltip && <TooltipInfo texto={tooltip} />}\r\n      </label>\r\n\r\n      {maxEtiquetas && valores.length >= maxEtiquetas && (\r\n        <p className=\"text-xs text-udlaverso-gris mt-1\">\r\n          Límite máximo de {maxEtiquetas} etiquetas alcanzado.\r\n        </p>\r\n      )}\r\n\r\n      <div className=\"border rounded-lg p-2 flex flex-wrap gap-2 min-h-[42px]\">\r\n        {valores.map((v, i) => (\r\n          <EtiquetaSeleccion\r\n            key={i}\r\n            texto={v}\r\n            onRemove={() => eliminarEtiqueta(v)}\r\n          />\r\n        ))}\r\n\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={handleKeyDown}\r\n          placeholder={placeholder}\r\n          className=\"flex-1 min-w-[150px] border-none focus:ring-0 outline-none text-sm\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CampoEtiquetas;\r\n",
          "ControlPaginacion.tsx": "import BotonPagina from \"../atoms/BotonPagina\";\r\nimport { FaAngleLeft, FaAngleRight } from \"react-icons/fa6\";\r\n\r\ntype Props = {\r\n  pagina: number;\r\n  totalPaginas: number;\r\n  onCambioPagina: (nuevaPagina: number) => void;\r\n  desde: number;\r\n  hasta: number;\r\n  total: number;\r\n  nombreEntidad?: string;\r\n};\r\n\r\nconst ControlPaginacion: React.FC<Props> = ({\r\n  pagina,\r\n  totalPaginas,\r\n  onCambioPagina,\r\n  desde,\r\n  hasta,\r\n  total,\r\n  nombreEntidad = \"registros\",\r\n}) => (\r\n  <div className=\"px-4 py-3 bg-gray-50 border-t flex flex-col md:flex-row items-center justify-between gap-3\">\r\n    <div className=\"text-sm text-udlaverso-gris\">\r\n      Mostrando{\" \"}\r\n      <span className=\"font-medium text-udlaverso-negro\">{desde}</span> a{\" \"}\r\n      <span className=\"font-medium text-udlaverso-negro\">{hasta}</span> de{\" \"}\r\n      <span className=\"font-medium text-udlaverso-negro\">{total}</span>{\" \"}\r\n      {nombreEntidad}\r\n    </div>\r\n\r\n    <div className=\"flex items-center gap-2\">\r\n      <BotonPagina\r\n        deshabilitado={pagina === 1}\r\n        onClick={() => onCambioPagina(pagina - 1)}\r\n      >\r\n        ‹\r\n      </BotonPagina>\r\n\r\n      {Array.from({ length: totalPaginas }, (_, i) => i + 1).map((num) => (\r\n        <BotonPagina\r\n          key={num}\r\n          activo={num === pagina}\r\n          onClick={() => onCambioPagina(num)}\r\n        >\r\n          {num}\r\n        </BotonPagina>\r\n      ))}\r\n\r\n      <BotonPagina\r\n        deshabilitado={pagina === totalPaginas || totalPaginas === 0}\r\n        onClick={() => onCambioPagina(pagina + 1)}\r\n      >\r\n        ›\r\n      </BotonPagina>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default ControlPaginacion;\r\n",
          "EditorTexto.tsx": "import {\r\n  EditorProvider,\r\n  Editor,\r\n  Toolbar,\r\n  BtnBold,\r\n  BtnItalic,\r\n  BtnUnderline,\r\n  BtnLink,\r\n  BtnNumberedList,\r\n  BtnBulletList,\r\n} from \"react-simple-wysiwyg\";\r\nimport React from \"react\";\r\n\r\ntype Props = {\r\n  label: string;\r\n  maxLength?: number;\r\n  value: string;\r\n  onChange: (v: string) => void;\r\n};\r\n\r\nconst EditorTexto: React.FC<Props> = ({\r\n  label,\r\n  maxLength = 2200,\r\n  value,\r\n  onChange,\r\n}) => {\r\n  const plainText = value.replace(/<[^>]+>/g, \"\");\r\n\r\n  return (\r\n    <div className=\"space-y-1\">\r\n      <label className=\"block text-sm font-semibold text-gray-700\">\r\n        {label} (máximo {maxLength} caracteres)\r\n      </label>\r\n\r\n      <div className=\"border border-gray-300 rounded-lg bg-white focus-within:ring-2 focus-within:ring-udlaverso-verde overflow-hidden\">\r\n        <EditorProvider>\r\n          <Editor\r\n            value={value}\r\n            onChange={(e) => {\r\n              if (plainText.length <= maxLength) onChange(e.target.value);\r\n            }}\r\n            className=\"min-h-[220px] max-h-[400px] overflow-y-auto text-sm leading-relaxed text-gray-800 bg-white rounded-b-lg\"\r\n          >\r\n            <Toolbar className=\"flex flex-wrap items-center gap-x-2 gap-y-1 border-b border-gray-200 bg-gray-50 p-2 rounded-t-lg\">\r\n              <BtnBold className=\"p-2 rounded-md hover:bg-udlaverso-verde/10 data-[active=true]:bg-udlaverso-verde/20 transition\" />\r\n              <BtnItalic className=\"p-2 rounded-md hover:bg-udlaverso-verde/10 data-[active=true]:bg-udlaverso-verde/20 transition\" />\r\n              <BtnUnderline className=\"p-2 rounded-md hover:bg-udlaverso-verde/10 data-[active=true]:bg-udlaverso-verde/20 transition\" />\r\n              <BtnLink className=\"p-2 rounded-md hover:bg-udlaverso-verde/10 transition\" />\r\n              <BtnNumberedList className=\"p-2 rounded-md hover:bg-udlaverso-verde/10 data-[active=true]:bg-udlaverso-verde/20 transition\" />\r\n              <BtnBulletList className=\"p-2 rounded-md hover:bg-udlaverso-verde/10 data-[active=true]:bg-udlaverso-verde/20 transition\" />\r\n            </Toolbar>\r\n          </Editor>\r\n        </EditorProvider>\r\n      </div>\r\n\r\n      <p\r\n        className={`text-xs text-right ${\r\n          plainText.length >= maxLength ? \"text-red-600\" : \"text-gray-500\"\r\n        }`}\r\n      >\r\n        {plainText.length} / {maxLength} caracteres\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditorTexto;\r\n",
          "GaleriaImagenes.tsx": "import React, { useState } from \"react\";\r\nimport VistaPreviaImagen from \"../atoms/VistaPreviaImagen\";\r\nimport BotonFlecha from \"../atoms/BotonFlecha\";\r\n\r\ntype Props = {\r\n  minimo?: number;\r\n  maxVisibles?: number;\r\n  maxImagenes?: number; // ← nuevo límite total\r\n  onChange: (archivos: File[]) => void;\r\n};\r\n\r\nconst GaleriaImagenes: React.FC<Props> = ({\r\n  minimo = 3,\r\n  maxVisibles = 5,\r\n  maxImagenes = 10,\r\n  onChange,\r\n}) => {\r\n  const [imagenes, setImagenes] = useState<File[]>([]);\r\n  const [indice, setIndice] = useState(0);\r\n  const [mensajeError, setMensajeError] = useState(\"\");\r\n\r\n  const handleSeleccion = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const archivos = e.target.files ? Array.from(e.target.files) : [];\r\n    const nuevas = [...imagenes, ...archivos];\r\n\r\n    if (nuevas.length > maxImagenes) {\r\n      setMensajeError(`Solo se permiten ${maxImagenes} imágenes como máximo.`);\r\n      return;\r\n    }\r\n\r\n    setMensajeError(\"\");\r\n    setImagenes(nuevas);\r\n    onChange(nuevas);\r\n  };\r\n\r\n  const eliminarImagen = (index: number) => {\r\n    const nuevas = imagenes.filter((_, i) => i !== index);\r\n    setImagenes(nuevas);\r\n    onChange(nuevas);\r\n    setMensajeError(\"\");\r\n  };\r\n\r\n  const navegar = (direccion: \"prev\" | \"next\") => {\r\n    if (imagenes.length <= maxVisibles) return;\r\n    setIndice((prev) =>\r\n      direccion === \"next\"\r\n        ? Math.min(prev + 1, imagenes.length - maxVisibles)\r\n        : Math.max(prev - 1, 0)\r\n    );\r\n  };\r\n\r\n  const visibleImagenes = imagenes.slice(indice, indice + maxVisibles);\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        multiple\r\n        onChange={handleSeleccion}\r\n        className=\"text-sm text-gray-600 file:mr-3 file:py-2 file:px-4 file:rounded-lg file:border-0 file:bg-gray-200 hover:file:bg-gray-300\"\r\n      />\r\n\r\n      {mensajeError && (\r\n        <p className=\"text-xs text-red-500 mt-1\">{mensajeError}</p>\r\n      )}\r\n\r\n      {imagenes.length > 0 && (\r\n        <div className=\"mt-3 space-y-3\">\r\n          <p className=\"text-xs text-gray-500\">\r\n            {imagenes.length} imagen{imagenes.length !== 1 ? \"es\" : \"\"} cargada\r\n            {imagenes.length < minimo && <> — se requieren al menos {minimo}</>}\r\n          </p>\r\n\r\n          <div className=\"flex items-center gap-2 mt-2\">\r\n            {imagenes.length > maxVisibles && (\r\n              <BotonFlecha\r\n                direccion=\"left\"\r\n                onClick={() => navegar(\"prev\")}\r\n                deshabilitado={indice === 0}\r\n              />\r\n            )}\r\n\r\n            <div className=\"flex gap-3 overflow-hidden\">\r\n              {visibleImagenes.map((img, i) => (\r\n                <VistaPreviaImagen\r\n                  key={i + indice}\r\n                  src={URL.createObjectURL(img)}\r\n                  alt={`Miniatura ${i + 1}`}\r\n                  onRemove={() => eliminarImagen(i + indice)}\r\n                />\r\n              ))}\r\n            </div>\r\n\r\n            {imagenes.length > maxVisibles && (\r\n              <BotonFlecha\r\n                direccion=\"right\"\r\n                onClick={() => navegar(\"next\")}\r\n                deshabilitado={indice + maxVisibles >= imagenes.length}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GaleriaImagenes;\r\n",
          "ModalVistaProyecto.tsx": "import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport EstrellasValoracion from \"../../Proyectos/molecules/EstrellasValoracion\";\r\nimport ContadorVisitas from \"../../Proyectos/atoms/ContadorVisitas\";\r\nimport BotonAdmin from \"../atoms/BotonAdmin\";\r\n\r\ninterface Proyecto {\r\n  id: string;\r\n  titulo: string;\r\n  categoria: string;\r\n  promedio: number;\r\n  visitas: number;\r\n  autor: string;\r\n  fecha: string;\r\n  descripcionCorta: string;\r\n  linkProyecto: string;\r\n  imagenes: string[];\r\n}\r\n\r\ninterface Props {\r\n  proyecto: Proyecto;\r\n  onClose: () => void;\r\n}\r\n\r\nconst ModalVistaProyecto: React.FC<Props> = ({ proyecto, onClose }) => {\r\n  const abrirProyecto = () => window.open(proyecto.linkProyecto, \"_blank\");\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black/50 flex justify-center items-center z-50 px-4\">\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 30 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        exit={{ opacity: 0, y: 20 }}\r\n        className=\"bg-white rounded-2xl shadow-lg max-w-3xl w-full overflow-hidden\"\r\n      >\r\n        {/* Encabezado */}\r\n        <div className=\"flex items-center justify-between border-b px-6 py-4\">\r\n          <h2 className=\"text-lg md:text-xl font-bold text-udlaverso-negro\">\r\n            Vista rápida del proyecto\r\n          </h2>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-500 hover:text-red-500 text-xl font-semibold\"\r\n          >\r\n            ✕\r\n          </button>\r\n        </div>\r\n\r\n        {/* Contenido */}\r\n        <div className=\"p-6 grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          {/* Imagen principal */}\r\n          <div className=\"flex justify-center items-center bg-gray-100 rounded-xl overflow-hidden h-56\">\r\n            <img\r\n              src={proyecto.imagenes?.[0] || \"/images/default.png\"}\r\n              alt={proyecto.titulo}\r\n              className=\"object-cover w-full h-full\"\r\n            />\r\n          </div>\r\n\r\n          {/* Datos básicos */}\r\n          <div className=\"flex flex-col gap-3\">\r\n            <h3 className=\"text-xl font-semibold text-udlaverso-negro\">\r\n              {proyecto.titulo}\r\n            </h3>\r\n\r\n            <p className=\"text-sm text-udlaverso-gris\">\r\n              <span className=\"font-medium text-udlaverso-negro\">\r\n                Categoría:\r\n              </span>{\" \"}\r\n              {proyecto.categoria}\r\n            </p>\r\n\r\n            <p className=\"text-sm text-udlaverso-gris\">\r\n              <span className=\"font-medium text-udlaverso-negro\">Autor:</span>{\" \"}\r\n              {proyecto.autor}\r\n            </p>\r\n\r\n            <p className=\"text-sm text-udlaverso-gris\">\r\n              <span className=\"font-medium text-udlaverso-negro\">Fecha:</span>{\" \"}\r\n              {new Date(proyecto.fecha).toLocaleDateString(\"es-ES\")}\r\n            </p>\r\n\r\n            <EstrellasValoracion\r\n              valor={proyecto.promedio}\r\n              interactiva={false}\r\n            />\r\n            <ContadorVisitas visitas={proyecto.visitas} />\r\n\r\n            <p className=\"text-sm text-gray-700 mt-2\">\r\n              {proyecto.descripcionCorta}\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Botones de acción */}\r\n        <div className=\"flex justify-end items-center gap-3 border-t px-6 py-4 bg-gray-50\">\r\n          <BotonAdmin\r\n            texto=\"Ver como usuario\"\r\n            onClick={abrirProyecto}\r\n            variante=\"principal\"\r\n          />\r\n          <BotonAdmin texto=\"Cerrar\" onClick={onClose} variante=\"secundario\" />\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalVistaProyecto;\r\n",
          "SelectorCategorias.tsx": "import React, { useState } from \"react\";\r\nimport EtiquetaSeleccion from \"../atoms/EtiquetaSeleccion\";\r\n\r\ntype Props = {\r\n  label?: string;\r\n  tooltip?: string;\r\n  categoriasDisponibles: string[];\r\n  categoriasSeleccionadas: string[];\r\n  onChange: (nuevas: string[]) => void;\r\n  maxCategorias?: number;\r\n};\r\n\r\nconst SelectorCategorias: React.FC<Props> = ({\r\n  label = \"Categorías del proyecto *\",\r\n  tooltip,\r\n  categoriasDisponibles,\r\n  categoriasSeleccionadas,\r\n  onChange,\r\n  maxCategorias,\r\n}) => {\r\n  const [categoria, setCategoria] = useState(\"\");\r\n\r\n  const agregarCategoria = (nueva: string) => {\r\n    if (\r\n      nueva &&\r\n      !categoriasSeleccionadas.includes(nueva) &&\r\n      (!maxCategorias || categoriasSeleccionadas.length < maxCategorias)\r\n    ) {\r\n      onChange([...categoriasSeleccionadas, nueva]);\r\n    }\r\n  };\r\n\r\n  const eliminarCategoria = (cat: string) => {\r\n    onChange(categoriasSeleccionadas.filter((c) => c !== cat));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label className=\"text-sm font-semibold text-gray-700 mb-1 flex items-center gap-1\">\r\n        {label}\r\n        <span className=\"text-xs text-gray-500\">(selecciona una o más)</span>\r\n        {tooltip && (\r\n          <span\r\n            title={tooltip}\r\n            className=\"text-udlaverso-verde cursor-help text-sm\"\r\n          >\r\n            ⓘ\r\n          </span>\r\n        )}\r\n      </label>\r\n\r\n      <select\r\n        value={categoria}\r\n        onChange={(e) => {\r\n          agregarCategoria(e.target.value);\r\n          setCategoria(\"\");\r\n        }}\r\n        className=\"w-full border rounded-lg px-3 py-2 focus:ring-udlaverso-verde focus:border-udlaverso-verde outline-none\"\r\n      >\r\n        <option value=\"\">Selecciona una categoría</option>\r\n        {categoriasDisponibles\r\n          .filter((cat) => !categoriasSeleccionadas.includes(cat))\r\n          .map((cat) => (\r\n            <option key={cat} value={cat}>\r\n              {cat}\r\n            </option>\r\n          ))}\r\n      </select>\r\n\r\n      {maxCategorias && categoriasSeleccionadas.length >= maxCategorias && (\r\n        <p className=\"text-xs text-udlaverso-gris mt-1\">\r\n          Límite máximo de {maxCategorias} categorías alcanzado.\r\n        </p>\r\n      )}\r\n\r\n      {categoriasSeleccionadas.length > 0 && (\r\n        <div className=\"flex flex-wrap gap-2 mt-2\">\r\n          {categoriasSeleccionadas.map((cat) => (\r\n            <EtiquetaSeleccion\r\n              key={cat}\r\n              texto={cat}\r\n              onRemove={() => eliminarCategoria(cat)}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectorCategorias;\r\n",
          "Stepper.tsx": "const nombresPasos = [\r\n  \"Datos Básicos\",\r\n  \"Contenido y Herramientas\",\r\n  \"Imágenes y Multimedia\",\r\n  \"Revisión\",\r\n];\r\n\r\ninterface Props {\r\n  pasoActual: number;\r\n  total: number;\r\n}\r\n\r\nconst Stepper: React.FC<Props> = ({ pasoActual, total }) => {\r\n  return (\r\n    <div className=\"flex justify-between items-center w-full max-w-2xl mx-auto mb-8\">\r\n      {Array.from({ length: total }, (_, i) => {\r\n        const numero = i + 1;\r\n        const activo = numero <= pasoActual;\r\n        return (\r\n          <div key={i} className=\"flex-1 flex flex-col items-center relative\">\r\n            {i > 0 && (\r\n              <div\r\n                className={`absolute top-4 left-[-50%] w-full h-1 ${\r\n                  activo ? \"bg-udlaverso-verde\" : \"bg-gray-300\"\r\n                } -z-10`}\r\n              />\r\n            )}\r\n            <div\r\n              className={`w-8 h-8 flex items-center justify-center rounded-full border-2 text-sm font-medium transition ${\r\n                activo\r\n                  ? \"bg-udlaverso-verde border-udlaverso-verde text-white\"\r\n                  : \"border-gray-300 text-gray-400 bg-white\"\r\n              }`}\r\n            >\r\n              {numero}\r\n            </div>\r\n            <span\r\n              className={`text-xs mt-2 ${\r\n                activo ? \"text-udlaverso-verde font-medium\" : \"text-gray-400\"\r\n              }`}\r\n            >\r\n              {nombresPasos[i]}\r\n            </span>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stepper;\r\n",
          "TablaSimple.tsx": "import { useState } from \"react\";\r\nimport SelectorCantidad from \"../atoms/SelectorCantidad\";\r\nimport ControlPaginacion from \"./ControlPaginacion\";\r\n\r\ntype Columna<T> = {\r\n  id: keyof T | string;\r\n  titulo: string;\r\n  ancho?: string;\r\n  render?: (fila: T) => React.ReactNode;\r\n};\r\n\r\ntype Props<T> = {\r\n  columnas: Columna<T>[];\r\n  filas: T[];\r\n  vacio?: string;\r\n  nombreEntidad?: string;\r\n};\r\n\r\nfunction TablaSimple<T extends Record<string, any>>({\r\n  columnas,\r\n  filas,\r\n  vacio = \"Sin registros\",\r\n  nombreEntidad = \"registros\",\r\n}: Props<T>) {\r\n  const [pagina, setPagina] = useState(1);\r\n  const [porPagina, setPorPagina] = useState(5);\r\n\r\n  const totalPaginas = Math.ceil(filas.length / porPagina);\r\n  const filasPaginadas = filas.slice(\r\n    (pagina - 1) * porPagina,\r\n    pagina * porPagina\r\n  );\r\n\r\n  const cambiarPagina = (nuevaPagina: number) => {\r\n    if (nuevaPagina >= 1 && nuevaPagina <= totalPaginas) setPagina(nuevaPagina);\r\n  };\r\n\r\n  return (\r\n    <div className=\"overflow-x-auto border rounded-xl bg-white\">\r\n      <div className=\"flex items-center justify-between px-4 py-2 border-b bg-gray-50 flex-wrap gap-3\">\r\n        <SelectorCantidad\r\n          valor={porPagina}\r\n          onChange={(v) => {\r\n            setPorPagina(v);\r\n            setPagina(1);\r\n          }}\r\n          nombreEntidad={nombreEntidad}\r\n        />\r\n      </div>\r\n\r\n      <table className=\"min-w-full text-sm\">\r\n        <thead className=\"bg-gray-50 text-udlaverso-gris\">\r\n          <tr>\r\n            {columnas.map((c) => (\r\n              <th\r\n                key={String(c.id)}\r\n                className=\"text-left font-semibold px-4 py-3\"\r\n                style={{ width: c.ancho }}\r\n              >\r\n                {c.titulo}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {filas.length === 0 && (\r\n            <tr>\r\n              <td\r\n                colSpan={columnas.length}\r\n                className=\"px-4 py-8 text-center text-udlaverso-gris\"\r\n              >\r\n                {vacio}\r\n              </td>\r\n            </tr>\r\n          )}\r\n\r\n          {filasPaginadas.map((fila, i) => (\r\n            <tr key={i} className=\"border-t hover:bg-gray-50\">\r\n              {columnas.map((col) => (\r\n                <td key={String(col.id)} className=\"px-4 py-3 align-middle\">\r\n                  {col.render\r\n                    ? col.render(fila)\r\n                    : (fila[col.id] as React.ReactNode)}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <ControlPaginacion\r\n        pagina={pagina}\r\n        totalPaginas={totalPaginas}\r\n        onCambioPagina={cambiarPagina}\r\n        desde={(pagina - 1) * porPagina + 1}\r\n        hasta={Math.min(pagina * porPagina, filas.length)}\r\n        total={filas.length}\r\n        nombreEntidad={nombreEntidad}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TablaSimple;\r\n"
        },
        "organisms": {
          "FooterAdmin.tsx": "const FooterAdmin: React.FC = () => {\r\n  return (\r\n    <div className=\"text-center text-xs text-udlaverso-gris\">\r\n      <p>\r\n        © {new Date().getFullYear()} UDLAVERSO - Universidad de la Amazonia\r\n        Todos los derechos reservados.\r\n      </p>\r\n      <p className=\"mt-1\">\r\n        <a\r\n          href=\"/manual-usuario.pdf\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"text-udlaverso-verde hover:underline\"\r\n        >\r\n          Manual del administrador (en desarrollo)\r\n        </a>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FooterAdmin;\r\n",
          "HeroAdmin.tsx": "import { useNavigate } from \"react-router-dom\";\r\nimport { FaHome } from \"react-icons/fa\";\r\nimport { LuLogOut } from \"react-icons/lu\";\r\n\r\nconst HeroAdmin: React.FC = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const volverInicio = () => navigate(\"/\");\r\n  const cerrarSesion = () => {\r\n    localStorage.removeItem(\"token\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <header className=\"bg-white border rounded-2xl p-4 flex flex-col sm:flex-row items-center justify-between gap-4 shadow-sm\">\r\n      <div className=\"flex items-center gap-3\">\r\n        <img\r\n          src=\"/logos/logo-udla.webp\"\r\n          alt=\"Logo UdlaVerso\"\r\n          className=\"w-10 h-10 rounded-full object-cover\"\r\n        />\r\n        <div>\r\n          <h1 className=\"text-xl md:text-2xl font-extrabold text-udlaverso-negro\">\r\n            Administrador\r\n          </h1>\r\n\r\n          <p className=\"text-sm text-udlaverso-gris\">\r\n            Gestiona proyectos, comentarios, noticias, preguntas frecuentes y\r\n            métricas.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex gap-2\">\r\n        <button\r\n          onClick={volverInicio}\r\n          className=\"flex items-center gap-2 text-sm px-3 py-2 rounded-lg bg-gray-100 hover:bg-gray-200 transition\"\r\n        >\r\n          <FaHome className=\"w-4 h-4\" />\r\n          <span>Ir al portal</span>\r\n        </button>\r\n\r\n        <button\r\n          onClick={cerrarSesion}\r\n          className=\"flex items-center gap-2 text-sm px-3 py-2 rounded-lg bg-red-100 text-red-700 hover:bg-red-200 transition\"\r\n        >\r\n          <LuLogOut className=\"w-4 h-4\" />\r\n          <span>Cerrar sesión</span>\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default HeroAdmin;\r\n",
          "PanelEstadisticas.tsx": "import {\r\n  ResponsiveContainer,\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n} from \"recharts\";\r\n\r\nconst dataProyectos = [\r\n  { nombre: \"RA\", total: 12 },\r\n  { nombre: \"IoT\", total: 8 },\r\n  { nombre: \"Eventos\", total: 5 },\r\n];\r\n\r\nconst dataEstados = [\r\n  { name: \"Activos\", value: 18 },\r\n  { name: \"Borrador\", value: 4 },\r\n  { name: \"Inactivos\", value: 3 },\r\n];\r\n\r\nconst colores = {\r\n  barra: [\"#15803d\", \"#fb923c\", \"#9ca3af\"],\r\n  pie: [\"#15803d\", \"#fb923c\", \"#9ca3af\"],\r\n};\r\n\r\nconst PanelEstadisticas: React.FC = () => {\r\n  return (\r\n    <section className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n      <div className=\"bg-white border rounded-2xl p-4\">\r\n        <h3 className=\"font-semibold text-udlaverso-negro mb-2\">\r\n          Proyectos por categoría\r\n        </h3>\r\n        <div className=\"h-64\">\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <BarChart data={dataProyectos}>\r\n              <XAxis dataKey=\"nombre\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Bar dataKey=\"total\">\r\n                {dataProyectos.map((_, i) => (\r\n                  <Cell\r\n                    key={i}\r\n                    fill={colores.barra[i % colores.barra.length]}\r\n                  />\r\n                ))}\r\n              </Bar>\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"bg-white border rounded-2xl p-4\">\r\n        <h3 className=\"font-semibold text-udlaverso-negro mb-2\">\r\n          Estado de proyectos\r\n        </h3>\r\n        <div className=\"h-64\">\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <PieChart>\r\n              <Pie\r\n                data={dataEstados}\r\n                dataKey=\"value\"\r\n                nameKey=\"name\"\r\n                innerRadius={50}\r\n                outerRadius={80}\r\n                label\r\n              >\r\n                {dataEstados.map((_, i) => (\r\n                  <Cell key={i} fill={colores.pie[i % colores.pie.length]} />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PanelEstadisticas;\r\n",
          "PasoContenido.tsx": "import React, { useState } from \"react\";\r\nimport SelectorCategorias from \"../molecules/SelectorCategorias\";\r\nimport EditorTexto from \"../molecules/EditorTexto\";\r\nimport CampoEtiquetas from \"../molecules/CampoEtiquetas\";\r\n\r\nconst PasoContenido: React.FC = () => {\r\n  const [descripcionDetallada, setDescripcionDetallada] = useState(\"\");\r\n  const [herramientas, setHerramientas] = useState<string[]>([]);\r\n  const [palabrasClave, setPalabrasClave] = useState<string[]>([]);\r\n  const [categorias, setCategorias] = useState<string[]>([]);\r\n\r\n  return (\r\n    <div className=\"space-y-5\">\r\n      <h3 className=\"text-lg font-semibold text-udlaverso-negro\">\r\n        Contenido y Herramientas\r\n      </h3>\r\n\r\n      <SelectorCategorias\r\n        categoriasDisponibles={[\r\n          \"Educación\",\r\n          \"Ciencia\",\r\n          \"Eventos\",\r\n          \"Tecnología\",\r\n        ]}\r\n        categoriasSeleccionadas={categorias}\r\n        maxCategorias={3}\r\n        onChange={setCategorias}\r\n      />\r\n\r\n      <CampoEtiquetas\r\n        label=\"Herramientas utilizadas *\"\r\n        placeholder=\"Ej: Unity, Blender, OpenSim...\"\r\n        tooltip=\"Lista las herramientas o tecnologías utilizadas para el desarrollo del proyecto.\"\r\n        valores={herramientas}\r\n        onChange={setHerramientas}\r\n        maxEtiquetas={10}\r\n      />\r\n\r\n      <CampoEtiquetas\r\n        label=\"Palabras clave\"\r\n        placeholder=\"Ej: RA, IoT, biodiversidad...\"\r\n        tooltip=\"Ayudan a la búsqueda y clasificación del proyecto.\"\r\n        valores={palabrasClave}\r\n        onChange={setPalabrasClave}\r\n        maxEtiquetas={5}\r\n      />\r\n\r\n      <EditorTexto\r\n        label=\"Descripción detallada *\"\r\n        maxLength={2200}\r\n        value={descripcionDetallada}\r\n        onChange={setDescripcionDetallada}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasoContenido;\r\n",
          "PasoDatosBasicos.tsx": "import React, { useState } from \"react\";\r\nimport CampoTexto from \"../atoms/CampoTexto\";\r\nimport CampoTextoArea from \"../atoms/CampoTextoArea\";\r\nimport EditorTexto from \"../molecules/EditorTexto\";\r\n\r\nconst PasoDatosBasicos: React.FC = () => {\r\n  const [titulo, setTitulo] = useState(\"\");\r\n  const [autor, setAutor] = useState(\"\");\r\n  const [objetivo, setObjetivo] = useState(\"\");\r\n  const [descripcionCorta, setDescripcionCorta] = useState(\"\");\r\n  const [descripcionLarga, setDescripcionLarga] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"space-y-5\">\r\n      <h3 className=\"text-lg font-semibold text-udlaverso-negro\">\r\n        Datos Básicos\r\n      </h3>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        <CampoTexto\r\n          label=\"Título del proyecto *\"\r\n          placeholder=\"Ingrese el título del proyecto\"\r\n          tooltip=\"Nombre principal del proyecto tal como aparecerá públicamente.\"\r\n          value={titulo}\r\n          onChange={setTitulo}\r\n        />\r\n\r\n        <CampoTexto\r\n          label=\"Autor *\"\r\n          placeholder=\"Ej: Sebastián Sierra\"\r\n          tooltip=\"Nombre del autor del desarrollo.\"\r\n          value={autor}\r\n          onChange={setAutor}\r\n        />\r\n      </div>\r\n\r\n      <CampoTextoArea\r\n        label=\"Objetivo principal del proyecto *\"\r\n        placeholder=\"Describe el objetivo principal del proyecto...\"\r\n        tooltip=\"Describe el propósito central del proyecto. Este texto se mostrará debajo del título en la sección principal del proyecto.\"\r\n        maxLength={100}\r\n        filas={3}\r\n        value={objetivo}\r\n        onChange={setObjetivo}\r\n      />\r\n\r\n      <CampoTextoArea\r\n        label=\"Descripción corta (aparece en las tarjetas) *\"\r\n        placeholder=\"Ej: Exploración interactiva en RA para conceptos de física.\"\r\n        tooltip=\"Texto breve que se muestra en la tarjeta del proyecto para resumir su contenido.\"\r\n        maxLength={200}\r\n        filas={3}\r\n        value={descripcionCorta}\r\n        onChange={setDescripcionCorta}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasoDatosBasicos;\r\n",
          "PasoImagenes.tsx": "import React, { useState } from \"react\";\r\nimport CampoTexto from \"../atoms/CampoTexto\";\r\nimport VistaPreviaImagen from \"../atoms/VistaPreviaImagen\";\r\nimport LabelConTooltip from \"../atoms/LabelConTooltip\";\r\nimport GaleriaImagenes from \"../molecules/GaleriaImagenes\";\r\n\r\nconst PasoImagenes: React.FC = () => {\r\n  const [imagenHero, setImagenHero] = useState<File | null>(null);\r\n  const [galeria, setGaleria] = useState<File[]>([]);\r\n  const [video, setVideo] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"space-y-5\">\r\n      <h3 className=\"text-lg font-semibold text-udlaverso-negro\">\r\n        Imágenes y Multimedia\r\n      </h3>\r\n\r\n      <div className=\"space-y-3\">\r\n        <LabelConTooltip\r\n          texto=\"Imagen principal (Hero)\"\r\n          obligatorio\r\n          tooltip=\"Esta imagen aparecerá como encabezado del proyecto en la vista pública.\"\r\n        />\r\n\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={(e) =>\r\n            setImagenHero(e.target.files ? e.target.files[0] : null)\r\n          }\r\n          className=\"text-sm text-gray-600 file:mr-3 file:py-2 file:px-4 file:rounded-lg file:border-0 file:bg-udlaverso-verde file:text-white hover:file:bg-udlaverso-verde/90\"\r\n        />\r\n        {imagenHero && (\r\n          <div className=\"mt-3\">\r\n            <VistaPreviaImagen\r\n              src={URL.createObjectURL(imagenHero)}\r\n              alt=\"Hero\"\r\n              onRemove={() => setImagenHero(null)}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <p className=\"text-xs text-gray-500 mt-1\">\r\n          Esta imagen aparecerá como encabezado del proyecto.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"space-y-3\">\r\n        <LabelConTooltip\r\n          texto=\"Otras imágenes (galería)\"\r\n          tooltip=\"Agrega imágenes adicionales del proyecto (máximo 10).\"\r\n        />\r\n\r\n        <GaleriaImagenes minimo={3} onChange={setGaleria} maxImagenes={10} />\r\n      </div>\r\n\r\n      <CampoTexto\r\n        label=\"Video del proyecto\"\r\n        placeholder=\"https://youtube.com/...\"\r\n        tooltip=\"Puedes incluir un enlace a un video de YouTube o Vimeo relacionado con tu proyecto.\"\r\n        value={video}\r\n        onChange={setVideo}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasoImagenes;\r\n",
          "PasoRevision.tsx": "import { FaCheckCircle } from \"react-icons/fa\";\r\n\r\nconst PasoRevision: React.FC = () => {\r\n  return (\r\n    <div className=\"text-center space-y-4\">\r\n      <FaCheckCircle className=\"text-udlaverso-verde text-5xl mx-auto\" />\r\n      <h3 className=\"text-lg font-semibold text-udlaverso-negro\">\r\n        Revisión final\r\n      </h3>\r\n      <p className=\"text-gray-600 max-w-md mx-auto\">\r\n        Revisa que todos los datos estén correctos antes de guardar. Podrás\r\n        editarlos más adelante desde el panel de administración.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasoRevision;\r\n",
          "SeccionComentarios.tsx": "import { useMemo, useState } from \"react\";\r\nimport { FaCheck, FaTrash } from \"react-icons/fa\";\r\nimport TablaSimple from \"../molecules/TablaSimple\";\r\nimport BarraAcciones from \"../molecules/BarraAcciones\";\r\n\r\ntype Fila = {\r\n  proyecto: string;\r\n  usuario: string;\r\n  estrellas: number;\r\n  comentario: string;\r\n  fecha: string;\r\n  acciones?: {\r\n    icono: React.ReactNode;\r\n    color: string;\r\n    onClick: () => void;\r\n    titulo: string;\r\n  }[];\r\n};\r\n\r\nconst mock: Fila[] = [\r\n  {\r\n    proyecto: \"Isla Biodiversidad\",\r\n    usuario: \"Ana\",\r\n    estrellas: 5,\r\n    comentario: \"Excelente\",\r\n    fecha: \"2025-10-10\",\r\n  },\r\n  {\r\n    proyecto: \"Laboratorio IoT\",\r\n    usuario: \"Luis\",\r\n    estrellas: 4,\r\n    comentario: \"Muy útil\",\r\n    fecha: \"2025-10-08\",\r\n  },\r\n];\r\n\r\nconst SeccionComentarios: React.FC = () => {\r\n  const [q, setQ] = useState(\"\");\r\n\r\n  const filas = useMemo(\r\n    () =>\r\n      mock\r\n        .filter(\r\n          (f) =>\r\n            f.proyecto.toLowerCase().includes(q.toLowerCase()) ||\r\n            f.usuario.toLowerCase().includes(q.toLowerCase())\r\n        )\r\n        .map((f) => ({\r\n          ...f,\r\n          acciones: [\r\n            {\r\n              icono: <FaCheck className=\"w-4 h-4\" />,\r\n              color: \"text-green-600 hover:text-green-700\",\r\n              titulo: \"Aprobar comentario\",\r\n              onClick: () => alert(`Aprobar comentario de ${f.usuario}`),\r\n            },\r\n            {\r\n              icono: <FaTrash className=\"w-4 h-4\" />,\r\n              color: \"text-red-600 hover:text-red-700\",\r\n              titulo: \"Eliminar comentario\",\r\n              onClick: () => alert(`Eliminar comentario de ${f.usuario}`),\r\n            },\r\n          ],\r\n        })),\r\n    [q]\r\n  );\r\n\r\n  const columnas = [\r\n    { id: \"proyecto\", titulo: \"Proyecto\" },\r\n    { id: \"usuario\", titulo: \"Usuario\" },\r\n    { id: \"estrellas\", titulo: \"⭐\" },\r\n    { id: \"comentario\", titulo: \"Comentario\" },\r\n    { id: \"fecha\", titulo: \"Fecha\" },\r\n    {\r\n      id: \"acciones\",\r\n      titulo: \"Acciones\",\r\n      ancho: \"100px\",\r\n      render: (f: Fila) => (\r\n        <div className=\"flex gap-3 justify-start\">\r\n          {f.acciones?.map((a, i) => (\r\n            <button\r\n              key={i}\r\n              onClick={a.onClick}\r\n              title={a.titulo}\r\n              className={`transition ${a.color}`}\r\n            >\r\n              {a.icono}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      ),\r\n    },\r\n  ] as const;\r\n\r\n  return (\r\n    <section id=\"comentarios\" className=\"space-y-3\">\r\n      <div className=\"flex items-center justify-between flex-wrap gap-3\">\r\n        <h2 className=\"text-lg md:text-xl font-bold text-udlaverso-negro\">\r\n          Comentarios\r\n        </h2>\r\n        <BarraAcciones\r\n          onNuevo={() => alert(\"No aplica\")}\r\n          onBuscar={setQ}\r\n          placeholder=\"Buscar comentario...\"\r\n        />\r\n      </div>\r\n      <TablaSimple<Fila>\r\n        columnas={columnas as any}\r\n        filas={filas}\r\n        nombreEntidad=\"comentarios\"\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SeccionComentarios;\r\n",
          "SeccionFAQ.tsx": "import { useMemo, useState } from \"react\";\r\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\r\nimport TablaSimple from \"../molecules/TablaSimple\";\r\nimport BarraAcciones from \"../molecules/BarraAcciones\";\r\n\r\ntype Fila = {\r\n  pregunta: string;\r\n  respuesta: string;\r\n  acciones?: {\r\n    icono: React.ReactNode;\r\n    color: string;\r\n    onClick: () => void;\r\n    titulo: string;\r\n  }[];\r\n};\r\n\r\nconst mock: Fila[] = [\r\n  { pregunta: \"¿Qué es UdlaVerso?\", respuesta: \"Portal de proyectos con RA.\" },\r\n  {\r\n    pregunta: \"¿Cómo publico un proyecto?\",\r\n    respuesta: \"Desde el panel de admin.\",\r\n  },\r\n];\r\n\r\nconst SeccionFAQ: React.FC = () => {\r\n  const [q, setQ] = useState(\"\");\r\n\r\n  const filas = useMemo(\r\n    () =>\r\n      mock\r\n        .filter((f) => f.pregunta.toLowerCase().includes(q.toLowerCase()))\r\n        .map((f) => ({\r\n          ...f,\r\n          acciones: [\r\n            {\r\n              icono: <FaEdit className=\"w-4 h-4\" />,\r\n              color: \"text-blue-600 hover:text-blue-700\",\r\n              titulo: \"Editar pregunta\",\r\n              onClick: () => alert(`Editar: ${f.pregunta}`),\r\n            },\r\n            {\r\n              icono: <FaTrash className=\"w-4 h-4\" />,\r\n              color: \"text-red-600 hover:text-red-700\",\r\n              titulo: \"Eliminar pregunta\",\r\n              onClick: () => alert(`Eliminar: ${f.pregunta}`),\r\n            },\r\n          ],\r\n        })),\r\n    [q]\r\n  );\r\n\r\n  const columnas = [\r\n    { id: \"pregunta\", titulo: \"Pregunta\" },\r\n    { id: \"respuesta\", titulo: \"Respuesta\" },\r\n    {\r\n      id: \"acciones\",\r\n      titulo: \"Acciones\",\r\n      ancho: \"100px\",\r\n      render: (f: Fila) => (\r\n        <div className=\"flex gap-3 justify-start\">\r\n          {f.acciones?.map((a, i) => (\r\n            <button\r\n              key={i}\r\n              onClick={a.onClick}\r\n              title={a.titulo}\r\n              className={`transition ${a.color}`}\r\n            >\r\n              {a.icono}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      ),\r\n    },\r\n  ] as const;\r\n\r\n  return (\r\n    <section id=\"faq\" className=\"space-y-3\">\r\n      <div className=\"flex items-center justify-between flex-wrap gap-3\">\r\n        <h2 className=\"text-lg md:text-xl font-bold text-udlaverso-negro\">\r\n          FAQ\r\n        </h2>\r\n        <BarraAcciones\r\n          onNuevo={() => alert(\"Nueva FAQ\")}\r\n          onBuscar={setQ}\r\n          placeholder=\"Buscar pregunta...\"\r\n        />\r\n      </div>\r\n      <TablaSimple<Fila> columnas={columnas as any} filas={filas} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SeccionFAQ;\r\n",
          "SeccionNoticias.tsx": "import { useState, useMemo } from \"react\";\r\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\r\nimport TablaSimple from \"../molecules/TablaSimple\";\r\nimport BarraAcciones from \"../molecules/BarraAcciones\";\r\nimport InsigniaEstado from \"../atoms/InsigniaEstado\";\r\n\r\ntype Fila = {\r\n  titulo: string;\r\n  fecha: string;\r\n  estado: \"activo\" | \"inactivo\";\r\n  acciones?: {\r\n    icono: React.ReactNode;\r\n    color: string;\r\n    onClick: () => void;\r\n    titulo: string;\r\n  }[];\r\n};\r\n\r\nconst mock: Fila[] = [\r\n  { titulo: \"Nueva Isla Interactiva\", fecha: \"2025-10-02\", estado: \"activo\" },\r\n  { titulo: \"Actualización UA3D\", fecha: \"2025-09-25\", estado: \"inactivo\" },\r\n];\r\n\r\nconst SeccionNoticias: React.FC = () => {\r\n  const [q, setQ] = useState(\"\");\r\n\r\n  const filas = useMemo(\r\n    () =>\r\n      mock\r\n        .filter((f) => f.titulo.toLowerCase().includes(q.toLowerCase()))\r\n        .map((f) => ({\r\n          ...f,\r\n          acciones: [\r\n            {\r\n              icono: <FaEdit className=\"w-4 h-4\" />,\r\n              color: \"text-blue-600 hover:text-blue-700\",\r\n              titulo: \"Editar noticia\",\r\n              onClick: () => alert(`Editar: ${f.titulo}`),\r\n            },\r\n            {\r\n              icono: <FaTrash className=\"w-4 h-4\" />,\r\n              color: \"text-red-600 hover:text-red-700\",\r\n              titulo: \"Eliminar noticia\",\r\n              onClick: () => alert(`Eliminar: ${f.titulo}`),\r\n            },\r\n          ],\r\n        })),\r\n    [q]\r\n  );\r\n\r\n  const columnas = [\r\n    { id: \"titulo\", titulo: \"Título\" },\r\n    { id: \"fecha\", titulo: \"Fecha\" },\r\n    {\r\n      id: \"estado\",\r\n      titulo: \"Estado\",\r\n      render: (f: Fila) => <InsigniaEstado estado={f.estado} />,\r\n    },\r\n    {\r\n      id: \"acciones\",\r\n      titulo: \"Acciones\",\r\n      ancho: \"100px\",\r\n      render: (f: Fila) => (\r\n        <div className=\"flex gap-3 justify-start\">\r\n          {f.acciones?.map((a, i) => (\r\n            <button\r\n              key={i}\r\n              onClick={a.onClick}\r\n              title={a.titulo}\r\n              className={`transition ${a.color}`}\r\n            >\r\n              {a.icono}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      ),\r\n    },\r\n  ] as const;\r\n\r\n  return (\r\n    <section id=\"noticias\" className=\"space-y-3\">\r\n      <div className=\"flex items-center justify-between flex-wrap gap-3\">\r\n        <h2 className=\"text-lg md:text-xl font-bold text-udlaverso-negro\">\r\n          Noticias\r\n        </h2>\r\n        <BarraAcciones\r\n          onNuevo={() => alert(\"Nueva noticia\")}\r\n          onBuscar={setQ}\r\n          placeholder=\"Buscar noticia...\"\r\n        />\r\n      </div>\r\n      <TablaSimple<Fila>\r\n        columnas={columnas as any}\r\n        filas={filas}\r\n        nombreEntidad=\"noticias\"\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SeccionNoticias;\r\n",
          "SeccionProyectos.tsx": "import { useMemo, useState } from \"react\";\r\nimport { FaEdit, FaTrash, FaEye } from \"react-icons/fa\";\r\nimport TablaSimple from \"../molecules/TablaSimple\";\r\nimport BarraAcciones from \"../molecules/BarraAcciones\";\r\nimport InsigniaEstado from \"../atoms/InsigniaEstado\";\r\nimport ModalVistaProyecto from \"../molecules/ModalVistaProyecto\";\r\n\r\ntype FilaProyecto = {\r\n  nombre: string;\r\n  categoria: string;\r\n  autor: string;\r\n  estado: \"activo\" | \"inactivo\";\r\n  visitas: number;\r\n  acciones?: {\r\n    icono: React.ReactNode;\r\n    onClick: () => void;\r\n    color: string;\r\n    titulo: string;\r\n  }[];\r\n};\r\n\r\nconst mock: FilaProyecto[] = [\r\n  {\r\n    nombre: \"Isla Biodiversidad\",\r\n    categoria: \"RA\",\r\n    autor: \"Equipo A\",\r\n    estado: \"activo\",\r\n    visitas: 321,\r\n  },\r\n  {\r\n    nombre: \"Laboratorio IoT\",\r\n    categoria: \"IoT\",\r\n    autor: \"Equipo B\",\r\n    estado: \"activo\",\r\n    visitas: 87,\r\n  },\r\n  {\r\n    nombre: \"Events 3D\",\r\n    categoria: \"Eventos\",\r\n    autor: \"Equipo C\",\r\n    estado: \"inactivo\",\r\n    visitas: 12,\r\n  },\r\n];\r\n\r\nconst SeccionProyectos: React.FC = () => {\r\n  const [q, setQ] = useState(\"\");\r\n  const [proyectoSeleccionado, setProyectoSeleccionado] =\r\n    useState<FilaProyecto | null>(null);\r\n\r\n  const filas = useMemo(\r\n    () =>\r\n      mock\r\n        .filter(\r\n          (f) =>\r\n            f.nombre.toLowerCase().includes(q.toLowerCase()) ||\r\n            f.categoria.toLowerCase().includes(q.toLowerCase())\r\n        )\r\n        .map((f) => ({\r\n          ...f,\r\n          acciones: [\r\n            {\r\n              icono: <FaEye className=\"w-4 h-4\" />,\r\n              color: \"text-green-600 hover:text-green-700\",\r\n              titulo: \"Ver proyecto\",\r\n              onClick: () => setProyectoSeleccionado(f),\r\n            },\r\n            {\r\n              icono: <FaEdit className=\"w-4 h-4\" />,\r\n              color: \"text-blue-600 hover:text-blue-700\",\r\n              titulo: \"Editar proyecto\",\r\n              onClick: () => alert(`Editar proyecto: ${f.nombre}`),\r\n            },\r\n            {\r\n              icono: <FaTrash className=\"w-4 h-4\" />,\r\n              color: \"text-red-600 hover:text-red-700\",\r\n              titulo: \"Eliminar proyecto\",\r\n              onClick: () => alert(`Eliminar proyecto: ${f.nombre}`),\r\n            },\r\n          ],\r\n        })),\r\n    [q]\r\n  );\r\n\r\n  const columnas = [\r\n    { id: \"nombre\", titulo: \"Proyecto\" },\r\n    { id: \"categoria\", titulo: \"Categoría\" },\r\n    { id: \"autor\", titulo: \"Autor\" },\r\n    {\r\n      id: \"estado\",\r\n      titulo: \"Estado\",\r\n      render: (f: FilaProyecto) => <InsigniaEstado estado={f.estado} />,\r\n    },\r\n    { id: \"visitas\", titulo: \"Visitas\" },\r\n    {\r\n      id: \"acciones\",\r\n      titulo: \"Acciones\",\r\n      ancho: \"120px\",\r\n      render: (f: FilaProyecto) => (\r\n        <div className=\"flex gap-3 justify-start\">\r\n          {f.acciones?.map((a, i) => (\r\n            <button\r\n              key={i}\r\n              onClick={a.onClick}\r\n              title={a.titulo}\r\n              className={`transition ${a.color}`}\r\n            >\r\n              {a.icono}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      ),\r\n    },\r\n  ] as const;\r\n\r\n  return (\r\n    <section id=\"proyectos\" className=\"space-y-3\">\r\n      <div className=\"flex items-center justify-between flex-wrap gap-3\">\r\n        <h2 className=\"text-lg md:text-xl font-bold text-udlaverso-negro\">\r\n          Proyectos\r\n        </h2>\r\n\r\n        <BarraAcciones\r\n          onNuevo={() => alert(\"Nuevo proyecto\")}\r\n          onBuscar={setQ}\r\n          placeholder=\"Buscar proyecto...\"\r\n        />\r\n      </div>\r\n\r\n      {/* Tabla */}\r\n      <TablaSimple<FilaProyecto>\r\n        columnas={columnas as any}\r\n        filas={filas}\r\n        nombreEntidad=\"proyectos\"\r\n      />\r\n\r\n      {/* Modal de vista rápida */}\r\n      {proyectoSeleccionado && (\r\n        <ModalVistaProyecto\r\n          proyecto={{\r\n            id: \"1\",\r\n            titulo: proyectoSeleccionado.nombre,\r\n            categoria: proyectoSeleccionado.categoria,\r\n            promedio: 4.5,\r\n            visitas: proyectoSeleccionado.visitas,\r\n            autor: proyectoSeleccionado.autor,\r\n            fecha: new Date().toISOString(),\r\n            descripcionCorta:\r\n              \"Vista previa del proyecto en modo administrador.\",\r\n            linkProyecto:\r\n              \"/proyectos/\" +\r\n              proyectoSeleccionado.nombre.toLowerCase().replace(/\\s+/g, \"-\"),\r\n            imagenes: [\"/images/imagen1.png\"],\r\n          }}\r\n          onClose={() => setProyectoSeleccionado(null)}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SeccionProyectos;\r\n",
          "SidebarAdmin.tsx": "import { NavLink, useLocation } from \"react-router-dom\";\r\n\r\nconst enlaces = [\r\n  { to: \"/admin\", label: \"Métricas\", exact: true },\r\n  { to: \"/admin/proyectos\", label: \"Proyectos\" },\r\n  { to: \"/admin/comentarios\", label: \"Comentarios\" },\r\n  { to: \"/admin/noticias\", label: \"Noticias\" },\r\n  { to: \"/admin/preguntas-frecuentes\", label: \"Preguntas frecuentes\" },\r\n];\r\n\r\nconst SidebarAdmin: React.FC = () => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <aside className=\"w-full md:w-64 shrink-0\">\r\n      <nav className=\"bg-white border rounded-2xl p-4 sticky top-4\">\r\n        <h3 className=\"text-sm font-semibold text-udlaverso-gris mb-3\">\r\n          Panel\r\n        </h3>\r\n\r\n        <ul className=\"space-y-2\">\r\n          {enlaces.map((e) => {\r\n            const isActive =\r\n              e.to === \"/admin\"\r\n                ? location.pathname === \"/admin\"\r\n                : location.pathname.startsWith(e.to);\r\n\r\n            return (\r\n              <li key={e.to}>\r\n                <NavLink\r\n                  to={e.to}\r\n                  className={`block px-3 py-2 rounded-md text-sm ${\r\n                    isActive\r\n                      ? \"bg-udlaverso-verde/10 text-udlaverso-verde font-semibold\"\r\n                      : \"hover:bg-gray-50\"\r\n                  }`}\r\n                >\r\n                  {e.label}\r\n                </NavLink>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </nav>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default SidebarAdmin;\r\n"
        }
      },
      "Proyectos": {
        "atoms": {
          "AvatarUsuario.tsx": "interface Props {\r\n  nombre: string;\r\n}\r\n\r\nconst AvatarUsuario: React.FC<Props> = ({ nombre }) => (\r\n  <div className=\"w-9 h-9 rounded-full bg-udlaverso-verde/20 flex items-center justify-center text-udlaverso-verde font-semibold\">\r\n    {nombre.charAt(0).toUpperCase()}\r\n  </div>\r\n);\r\n\r\nexport default AvatarUsuario;\r\n",
          "BotonAccion.tsx": "interface Props {\r\n  texto: string;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst BotonAccion: React.FC<Props> = ({ texto, onClick }) => (\r\n  <button\r\n    onClick={onClick}\r\n    className=\"bg-udlaverso-verde hover:bg-udlaverso-verdeOscuro text-white font-semibold px-5 py-2 rounded-full shadow-sm transition\"\r\n  >\r\n    {texto}\r\n  </button>\r\n);\r\n\r\nexport default BotonAccion;\r\n",
          "BotonCierreModal.tsx": "interface Props {\r\n  onClose: () => void;\r\n}\r\n\r\nconst BotonCierreModal: React.FC<Props> = ({ onClose }) => (\r\n  <button\r\n    onClick={onClose}\r\n    className=\"absolute top-3 right-4 text-gray-400 hover:text-udlaverso-verde text-lg\"\r\n  >\r\n    ✕\r\n  </button>\r\n);\r\n\r\nexport default BotonCierreModal;\r\n",
          "BotonNavegacion.tsx": "import { FaChevronLeft, FaChevronRight } from \"react-icons/fa6\";\r\n\r\ninterface Props {\r\n  direccion: \"izquierda\" | \"derecha\";\r\n  onClick: () => void;\r\n}\r\n\r\nconst BotonNavegacion: React.FC<Props> = ({ direccion, onClick }) => {\r\n  const Icono = direccion === \"izquierda\" ? FaChevronLeft : FaChevronRight;\r\n\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={`absolute ${\r\n        direccion === \"izquierda\" ? \"left-3\" : \"right-3\"\r\n      } top-1/2 -translate-y-1/2 bg-black/40 text-white p-2 rounded-full hover:bg-udlaverso-verde transition`}\r\n    >\r\n      <Icono />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default BotonNavegacion;\r\n",
          "BotonRedSocial.tsx": "import React from \"react\";\r\n\r\ninterface Props {\r\n  icon: React.ReactNode;\r\n  label: string;\r\n  onClick: () => void;\r\n}\r\n\r\nconst BotonRedSocial: React.FC<Props> = ({ icon, label, onClick }) => (\r\n  <button\r\n    onClick={onClick}\r\n    aria-label={label}\r\n    title={label}\r\n    className=\"text-udlaverso-verde hover:text-udlaverso-verdeOscuro transform transition-transform duration-200 ease-out hover:scale-110 active:scale-95\"\r\n  >\r\n    {icon}\r\n  </button>\r\n);\r\n\r\nexport default BotonRedSocial;\r\n",
          "Buscador.tsx": "import { FaSearch } from \"react-icons/fa\";\r\n\r\ninterface Props {\r\n  valor: string;\r\n  onChange: (valor: string) => void;\r\n  placeholder?: string;\r\n}\r\n\r\nconst Buscador: React.FC<Props> = ({\r\n  valor,\r\n  onChange,\r\n  placeholder = \"Buscar proyecto...\",\r\n}) => {\r\n  return (\r\n    <div className=\"relative w-full sm:w-64\">\r\n      <FaSearch className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-400\" />\r\n\r\n      <input\r\n        type=\"text\"\r\n        value={valor}\r\n        onChange={(e) => onChange(e.target.value)}\r\n        placeholder={placeholder}\r\n        className=\"w-full pl-10 pr-3 py-2 text-sm border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-udlaverso-verde focus:border-udlaverso-verde transition-all\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buscador;\r\n",
          "CategoriaChip.tsx": "interface Props {\r\n  texto: string;\r\n}\r\n\r\nconst CategoriaChip: React.FC<Props> = ({ texto }) => (\r\n  <span className=\"px-2 py-1 text-xs font-semibold text-udlaverso-verde bg-udlaverso-verde/10 rounded-full\">\r\n    {texto}\r\n  </span>\r\n);\r\n\r\nexport default CategoriaChip;\r\n",
          "ContadorResultados.tsx": "interface Props {\r\n  total: number;\r\n}\r\n\r\nconst ContadorResultados: React.FC<Props> = ({ total }) => (\r\n  <p className=\"text-sm text-udlaverso-gris\">\r\n    {total} resultado{total === 1 ? \"\" : \"s\"}\r\n  </p>\r\n);\r\n\r\nexport default ContadorResultados;\r\n",
          "ContadorVisitas.tsx": "import { FaRegEye } from \"react-icons/fa6\";\r\n\r\ninterface ContadorVisitasProps {\r\n  visitas: number;\r\n}\r\n\r\nconst ContadorVisitas: React.FC<ContadorVisitasProps> = ({ visitas }) => (\r\n  <div className=\"flex items-center gap-1 text-gray-600 text-sm mt-2\">\r\n    <FaRegEye size={18} />\r\n\r\n    <span>{visitas} visitas</span>\r\n  </div>\r\n);\r\n\r\nexport default ContadorVisitas;\r\n",
          "Estrella.tsx": "import { FaStar } from \"react-icons/fa\";\r\n\r\ninterface Props {\r\n  activa: boolean;\r\n  onClick?: () => void;\r\n  grande?: boolean;\r\n  interactiva?: boolean;\r\n}\r\n\r\nconst Estrella: React.FC<Props> = ({\r\n  activa,\r\n  onClick,\r\n  grande = false,\r\n  interactiva = true,\r\n}) => (\r\n  <FaStar\r\n    onClick={interactiva ? onClick : undefined}\r\n    className={`\r\n      transition\r\n      ${interactiva ? \"cursor-pointer\" : \"cursor-default\"}\r\n      ${activa ? \"text-yellow-400\" : \"text-gray-300\"}\r\n      ${interactiva && !activa ? \"hover:text-yellow-300\" : \"\"}\r\n      ${grande ? \"text-3xl\" : \"text-base\"}\r\n    `}\r\n  />\r\n);\r\n\r\nexport default Estrella;\r\n",
          "EtiquetaCategoria.tsx": "interface Props {\r\n  categoria: string;\r\n}\r\n\r\nconst EtiquetaCategoria: React.FC<Props> = ({ categoria }) => (\r\n  <span className=\"inline-block bg-udlaverso-verde/10 text-udlaverso-verde font-semibold px-3 py-1 rounded-full text-xs uppercase tracking-wide\">\r\n    {categoria}\r\n  </span>\r\n);\r\n\r\nexport default EtiquetaCategoria;\r\n",
          "EtiquetaTecnologia.tsx": "interface Props {\r\n  texto: string;\r\n}\r\n\r\nconst EtiquetaTecnologia: React.FC<Props> = ({ texto }) => (\r\n  <span className=\"px-3 py-1 rounded-full text-xs md:text-sm bg-udlaverso-verde/10 text-udlaverso-verde font-semibold shadow-sm hover:bg-udlaverso-verde/20 transition\">\r\n    {texto}\r\n  </span>\r\n);\r\n\r\nexport default EtiquetaTecnologia;\r\n",
          "FiltroSelect.tsx": "interface Props {\r\n  label?: string;\r\n  opciones: string[];\r\n  valor: string;\r\n  onChange: (valor: string) => void;\r\n}\r\n\r\nconst FiltroSelect: React.FC<Props> = ({\r\n  label = \"Categoría\",\r\n  opciones,\r\n  valor,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <div className=\"flex items-center gap-3\">\r\n      <label className=\"text-sm font-semibold text-udlaverso-negro\">\r\n        {label}\r\n      </label>\r\n      <select\r\n        value={valor}\r\n        onChange={(e) => onChange(e.target.value)}\r\n        className=\"px-3 py-2 border rounded-md text-sm bg-white focus:outline-none focus:ring-2 focus:ring-udlaverso-verde\"\r\n        aria-label={label}\r\n      >\r\n        {opciones.map((op) => (\r\n          <option key={op} value={op}>\r\n            {op}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FiltroSelect;\r\n",
          "ImagenProyecto.tsx": "interface Props {\r\n  src: string;\r\n  alt: string;\r\n  visible: boolean;\r\n}\r\n\r\nconst ImagenProyecto: React.FC<Props> = ({ src, alt, visible }) => (\r\n  <img\r\n    src={src}\r\n    alt={alt}\r\n    loading=\"lazy\"\r\n    className={`absolute inset-0 w-full h-full object-cover object-center transition-opacity duration-700 ease-in-out ${\r\n      visible ? \"opacity-100\" : \"opacity-0\"\r\n    }`}\r\n  />\r\n);\r\n\r\nexport default ImagenProyecto;\r\n",
          "Miniatura.tsx": "interface Props {\r\n  src: string;\r\n  activa: boolean;\r\n  onClick: () => void;\r\n}\r\n\r\nconst Miniatura: React.FC<Props> = ({ src, activa, onClick }) => (\r\n  <img\r\n    src={src}\r\n    alt=\"Miniatura\"\r\n    onClick={onClick}\r\n    draggable={false}\r\n    className={`w-20 h-20 object-cover rounded-lg border-2 transition-all flex-shrink-0 select-none cursor-pointer ${\r\n      activa\r\n        ? \"border-udlaverso-verde shadow-lg scale-105\"\r\n        : \"border-transparent hover:border-udlaverso-verde/50\"\r\n    }`}\r\n  />\r\n);\r\n\r\nexport default Miniatura;\r\n",
          "TituloProyecto.tsx": "interface Props {\r\n  texto: string;\r\n}\r\n\r\nconst TituloProyecto: React.FC<Props> = ({ texto }) => (\r\n  <h1 className=\"text-3xl md:text-4xl font-extrabold text-udlaverso-negro mb-4\">\r\n    {texto}\r\n  </h1>\r\n);\r\n\r\nexport default TituloProyecto;\r\n"
        },
        "hooks": {
          "useCategorias.ts": "import { useFetch } from \"../../../hooks/useFetch\";\r\n\r\nexport const useCategorias = () => {\r\n  const { data, loading, error } =\r\n    useFetch<{ id: number; nombre: string }[]>(\"/categorias\");\r\n\r\n  return { categorias: data || [], loading, error };\r\n};\r\n"
        },
        "mockData.ts": "import type { Proyecto } from \"../../components/Proyectos/organisms/GridProyectos\";\r\n\r\nexport const proyectosMock: Proyecto[] = [\r\n  {\r\n    id: 1,\r\n    titulo: \"Proyecto 1\",\r\n    resumen:\r\n      \"Lorem ipsum dolor sit amet consectetur adipiscing elit sed do eiusmod tempor.\",\r\n    categorias: [\"Educación\", \"Ciencia\"],\r\n    imagen1: \"/images/imagen1.png\",\r\n    imagen2: \"/images/imagen2.png\",\r\n    imagen3: \"/images/imagen3.jpg\",\r\n  },\r\n  {\r\n    id: 2,\r\n    titulo: \"Proyecto 2\",\r\n    resumen: \"Exploración interactiva con RA para conceptos de física.\",\r\n    categorias: [\"Ciencia\"],\r\n    imagen1: \"/images/imagen2.png\",\r\n    imagen2: \"/images/imagen3.jpg\",\r\n    imagen3: \"/images/imagen1.png\",\r\n  },\r\n  {\r\n    id: 3,\r\n    titulo: \"Proyecto 3\",\r\n    resumen: \"Visor UA3D para eventos académicos inmersivos.\",\r\n    categorias: [\"Eventos\", \"Tecnología\", \"Educación\"],\r\n    imagen1: \"/images/imagen3.jpg\",\r\n    imagen2: \"/images/imagen1.png\",\r\n    imagen3: \"/images/imagen2.png\",\r\n  },\r\n  {\r\n    id: 4,\r\n    titulo: \"Proyecto 4\",\r\n    resumen: \"Laboratorio IoT con sensores simulados en RA.\",\r\n    categorias: [\"Tecnología\", \"Ciencia\"],\r\n    imagen1: \"/images/imagen1.png\",\r\n    imagen2: \"/images/imagen3.jpg\",\r\n    imagen3: \"/images/imagen2.png\",\r\n  },\r\n  {\r\n    id: 5,\r\n    titulo: \"Proyecto 5\",\r\n    resumen: \"Matemáticas básicas con estaciones interactivas.\",\r\n    categorias: [\"Educación\"],\r\n    imagen1: \"/images/imagen2.png\",\r\n    imagen2: \"/images/imagen1.png\",\r\n    imagen3: \"/images/imagen3.jpg\",\r\n  },\r\n  {\r\n    id: 6,\r\n    titulo: \"Proyecto 6\",\r\n    resumen: \"Entorno colaborativo para aprendizaje de idiomas.\",\r\n    categorias: [\"Educación\", \"Eventos\", \"Tecnología\"],\r\n    imagen1: \"/images/imagen3.jpg\",\r\n    imagen2: \"/images/imagen2.png\",\r\n    imagen3: \"/images/imagen1.png\",\r\n  },\r\n  {\r\n    id: 7,\r\n    titulo: \"Proyecto 7\",\r\n    resumen: \"Biología amazónica: biodiversidad en RA.\",\r\n    categorias: [\"Ciencia\", \"Educación\"],\r\n    imagen1: \"/images/imagen1.png\",\r\n    imagen2: \"/images/imagen2.png\",\r\n    imagen3: \"/images/imagen3.jpg\",\r\n  },\r\n  {\r\n    id: 8,\r\n    titulo: \"Proyecto 8\",\r\n    resumen: \"Visualización de datos y analítica en RA.\",\r\n    categorias: [\"Tecnología\"],\r\n    imagen1: \"/images/imagen2.png\",\r\n    imagen2: \"/images/imagen3.jpg\",\r\n    imagen3: \"/images/imagen1.png\",\r\n  },\r\n  {\r\n    id: 9,\r\n    titulo: \"Proyecto 9\",\r\n    resumen:\r\n      \"Lorem ipsum dolor sit amet consectetur adipiscing elit sed do eiusmod tempor.\",\r\n    categorias: [\"Educación\", \"Eventos\"],\r\n    imagen1: \"/images/imagen1.png\",\r\n    imagen2: \"/images/imagen2.png\",\r\n    imagen3: \"/images/imagen3.jpg\",\r\n  },\r\n  {\r\n    id: 10,\r\n    titulo: \"Proyecto 10\",\r\n    resumen: \"Exploración interactiva con RA para conceptos de física.\",\r\n    categorias: [\"Ciencia\", \"Tecnología\", \"Eventos\"],\r\n    imagen1: \"/images/imagen2.png\",\r\n    imagen2: \"/images/imagen3.jpg\",\r\n    imagen3: \"/images/imagen1.png\",\r\n  },\r\n  {\r\n    id: 11,\r\n    titulo: \"Proyecto 11\",\r\n    resumen: \"Visor UA3D para eventos académicos inmersivos.\",\r\n    categorias: [\"Eventos\"],\r\n    imagen1: \"/images/imagen3.jpg\",\r\n    imagen2: \"/images/imagen1.png\",\r\n    imagen3: \"/images/imagen2.png\",\r\n  },\r\n  {\r\n    id: 12,\r\n    titulo: \"Proyecto 12\",\r\n    resumen: \"Laboratorio IoT con sensores simulados en RA.\",\r\n    categorias: [\"Tecnología\", \"Educación\"],\r\n    imagen1: \"/images/imagen1.png\",\r\n    imagen2: \"/images/imagen3.jpg\",\r\n    imagen3: \"/images/imagen2.png\",\r\n  },\r\n  {\r\n    id: 13,\r\n    titulo: \"Proyecto 13\",\r\n    resumen: \"Matemáticas básicas con estaciones interactivas.\",\r\n    categorias: [\"Educación\", \"Ciencia\", \"Eventos\"],\r\n    imagen1: \"/images/imagen2.png\",\r\n    imagen2: \"/images/imagen1.png\",\r\n    imagen3: \"/images/imagen3.jpg\",\r\n  },\r\n  {\r\n    id: 14,\r\n    titulo: \"Proyecto 14\",\r\n    resumen: \"Entorno colaborativo para aprendizaje de idiomas.\",\r\n    categorias: [\"Educación\", \"Tecnología\"],\r\n    imagen1: \"/images/imagen3.jpg\",\r\n    imagen2: \"/images/imagen2.png\",\r\n    imagen3: \"/images/imagen1.png\",\r\n  },\r\n  {\r\n    id: 15,\r\n    titulo: \"Proyecto 15\",\r\n    resumen: \"Biología amazónica: biodiversidad en RA.\",\r\n    categorias: [\"Ciencia\", \"Eventos\"],\r\n    imagen1: \"/images/imagen1.png\",\r\n    imagen2: \"/images/imagen2.png\",\r\n    imagen3: \"/images/imagen3.jpg\",\r\n  },\r\n  {\r\n    id: 16,\r\n    titulo: \"Proyecto 16\",\r\n    resumen: \"Visualización de datos y analítica en RA.\",\r\n    categorias: [\"Tecnología\", \"Ciencia\", \"Educación\"],\r\n    imagen1: \"/images/imagen2.png\",\r\n    imagen2: \"/images/imagen3.jpg\",\r\n    imagen3: \"/images/imagen1.png\",\r\n  },\r\n];\r\n",
        "molecules": {
          "BarraFiltros.tsx": "import { Link } from \"react-router-dom\";\r\nimport Boton from \"../../Shared/atoms/Boton\";\r\nimport FiltroSelect from \"../atoms/FiltroSelect\";\r\nimport Buscador from \"../atoms/Buscador\";\r\nimport ContadorResultados from \"../atoms/ContadorResultados\";\r\n\r\ninterface Props {\r\n  opciones: string[];\r\n  seleccion: string;\r\n  onChange: (valor: string) => void;\r\n  total: number;\r\n  busqueda: string;\r\n  onBuscar: (valor: string) => void;\r\n}\r\n\r\nconst BarraFiltros: React.FC<Props> = ({\r\n  opciones,\r\n  seleccion,\r\n  onChange,\r\n  total,\r\n  busqueda,\r\n  onBuscar,\r\n}) => {\r\n  return (\r\n    <div className=\"bg-white/80 backdrop-blur-sm border border-gray-200 rounded-xl p-4 md:px-5 md:py-3 shadow-sm flex flex-col sm:flex-row items-start sm:items-center justify-between gap-4 flex-wrap\">\r\n      <div className=\"flex flex-col sm:flex-row gap-3 items-start sm:items-center w-full sm:w-auto\">\r\n        <FiltroSelect\r\n          opciones={opciones}\r\n          valor={seleccion}\r\n          onChange={onChange}\r\n        />\r\n\r\n        <Buscador valor={busqueda} onChange={onBuscar} />\r\n      </div>\r\n\r\n      <div className=\"flex items-center gap-4 w-full sm:w-auto justify-between sm:justify-end\">\r\n        <ContadorResultados total={total} />\r\n        <Link to=\"/descargas\">\r\n          <Boton texto=\"Descargar visor\" variante=\"principal\" />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarraFiltros;\r\n",
          "BloqueAutorFecha.tsx": "interface Props {\r\n  autor: string;\r\n  fecha: string;\r\n}\r\n\r\nconst BloqueAutorFecha: React.FC<Props> = ({ autor, fecha }) => (\r\n  <div className=\"text-lg text-udlaverso-gris leading-relaxed\">\r\n    <p>\r\n      Creado por{\" \"}\r\n      <span className=\"font-semibold text-udlaverso-negro\">{autor}</span> en{\" \"}\r\n      <span className=\"text-udlaverso-negro\">{fecha}</span>.\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default BloqueAutorFecha;\r\n",
          "BloqueDescripcion.tsx": "interface Props {\r\n  descripcion: string;\r\n}\r\n\r\nconst BloqueDescripcion: React.FC<Props> = ({ descripcion }) => (\r\n  <div className=\"text-udlaverso-gris leading-relaxed\">\r\n    <p>{descripcion}</p>\r\n  </div>\r\n);\r\n\r\nexport default BloqueDescripcion;\r\n",
          "BloqueObjetivos.tsx": "interface Props {\r\n  objetivos: string;\r\n}\r\n\r\nconst BloqueObjetivos: React.FC<Props> = ({ objetivos }) => (\r\n  <div>\r\n    <p className=\"text-udlaverso-negro font-semibold mb-1\">\r\n      Objetivo principal:\r\n    </p>\r\n\r\n    <p className=\"text-udlaverso-gris leading-relaxed\">{objetivos}</p>\r\n  </div>\r\n);\r\n\r\nexport default BloqueObjetivos;\r\n",
          "BotonCompartir.tsx": "import {\r\n  FaFacebook,\r\n  FaSquareXTwitter,\r\n  FaWhatsapp,\r\n  FaLink,\r\n} from \"react-icons/fa6\";\r\nimport BotonRedSocial from \"../atoms/BotonRedSocial\";\r\n\r\ntype BotonCompartirProps = {\r\n  url: string;\r\n  titulo: string;\r\n};\r\n\r\nconst BotonCompartir: React.FC<BotonCompartirProps> = ({ url, titulo }) => {\r\n  const compartir = (red: \"facebook\" | \"twitter\" | \"whatsapp\") => {\r\n    const enlaces: Record<\"facebook\" | \"twitter\" | \"whatsapp\", string> = {\r\n      facebook: `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(\r\n        url\r\n      )}`,\r\n      twitter: `https://twitter.com/intent/tweet?url=${encodeURIComponent(\r\n        url\r\n      )}&text=${encodeURIComponent(titulo)}`,\r\n      whatsapp: `https://wa.me/?text=${encodeURIComponent(\r\n        `${titulo} - ${url}`\r\n      )}`,\r\n    };\r\n    window.open(enlaces[red], \"_blank\", \"noopener,noreferrer\");\r\n  };\r\n\r\n  const copiarEnlace = () => {\r\n    navigator.clipboard.writeText(url);\r\n    alert(\"Enlace copiado al portapapeles ✅\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex gap-3 justify-center mt-4\">\r\n      <BotonRedSocial\r\n        icon={<FaFacebook size={20} />}\r\n        label=\"Compartir en Facebook\"\r\n        onClick={() => compartir(\"facebook\")}\r\n      />\r\n\r\n      <BotonRedSocial\r\n        icon={<FaSquareXTwitter size={20} />}\r\n        label=\"Compartir en X\"\r\n        onClick={() => compartir(\"twitter\")}\r\n      />\r\n\r\n      <BotonRedSocial\r\n        icon={<FaWhatsapp size={20} />}\r\n        label=\"Compartir en WhatsApp\"\r\n        onClick={() => compartir(\"whatsapp\")}\r\n      />\r\n\r\n      <BotonRedSocial\r\n        icon={<FaLink size={20} />}\r\n        label=\"Copiar enlace\"\r\n        onClick={copiarEnlace}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BotonCompartir;\r\n",
          "CategoriaSocialProyecto.tsx": "import React from \"react\";\r\nimport EtiquetaCategoria from \"../atoms/EtiquetaCategoria\";\r\nimport BotonCompartir from \"./BotonCompartir\";\r\n\r\ninterface Props {\r\n  categoria: string;\r\n  titulo: string;\r\n}\r\n\r\nconst CategoriaSocialProyecto: React.FC<Props> = ({ categoria, titulo }) => {\r\n  return (\r\n    <div className=\"flex justify-between items-center sm:mr-4 lg:mr-8\">\r\n      <EtiquetaCategoria categoria={categoria} />\r\n\r\n      <BotonCompartir url={window.location.href} titulo={titulo} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoriaSocialProyecto;\r\n",
          "DescripcionLarga.tsx": "interface Props {\r\n  descripcion: string;\r\n}\r\n\r\nconst DescripcionLarga: React.FC<Props> = ({ descripcion }) => (\r\n  <section>\r\n    <h2 className=\"text-xl font-semibold text-udlaverso-negro\">\r\n      Sobre este proyecto\r\n    </h2>\r\n\r\n    <div\r\n      className=\"text-udlaverso-gris leading-relaxed prose max-w-none\"\r\n      dangerouslySetInnerHTML={{ __html: descripcion.replace(/\\n/g, \"<br/>\") }}\r\n    />\r\n  </section>\r\n);\r\n\r\nexport default DescripcionLarga;\r\n",
          "EstrellasValoracion.tsx": "import React from \"react\";\r\nimport Estrella from \"../atoms/Estrella\";\r\n\r\ninterface EstrellasValoracionProps {\r\n  valor: number;\r\n  onChange?: (nuevoValor: number) => void;\r\n  grande?: boolean;\r\n  interactiva?: boolean;\r\n}\r\n\r\nconst EstrellasValoracion: React.FC<EstrellasValoracionProps> = ({\r\n  valor,\r\n  onChange,\r\n  grande = false,\r\n  interactiva = true,\r\n}) => {\r\n  const estrellas = Array.from({ length: 5 }, (_, i) => i < valor);\r\n\r\n  return (\r\n    <div className=\"flex\">\r\n      {estrellas.map((activa, i) => (\r\n        <Estrella\r\n          key={i}\r\n          activa={activa}\r\n          grande={grande}\r\n          interactiva={interactiva}\r\n          onClick={() => interactiva && onChange && onChange(i + 1)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EstrellasValoracion;\r\n",
          "FormularioResenia.tsx": "import { useState } from \"react\";\r\nimport Estrella from \"../atoms/Estrella\";\r\n\r\ninterface Props {\r\n  onSubmit: (usuario: string, comentario: string, estrellas: number) => void;\r\n}\r\n\r\nconst FormularioResenia: React.FC<Props> = ({ onSubmit }) => {\r\n  const [usuario, setUsuario] = useState(\"\");\r\n  const [comentario, setComentario] = useState(\"\");\r\n  const [estrellas, setEstrellas] = useState(0);\r\n\r\n  const enviar = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!usuario || !comentario || estrellas === 0) return;\r\n    onSubmit(usuario, comentario, estrellas);\r\n    setUsuario(\"\");\r\n    setComentario(\"\");\r\n    setEstrellas(0);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={enviar} className=\"flex flex-col gap-4\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Tu nombre\"\r\n        value={usuario}\r\n        onChange={(e) => setUsuario(e.target.value)}\r\n        className=\"border border-gray-300 rounded-lg p-2 text-sm focus:ring-2 focus:ring-udlaverso-verde outline-none\"\r\n      />\r\n\r\n      <div className=\"flex justify-center gap-2\">\r\n        {[1, 2, 3, 4, 5].map((n) => (\r\n          <Estrella\r\n            key={n}\r\n            activa={n <= estrellas}\r\n            onClick={() => setEstrellas(n)}\r\n            grande\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <textarea\r\n        placeholder=\"Describe tu experiencia (opcional)\"\r\n        value={comentario}\r\n        onChange={(e) => setComentario(e.target.value)}\r\n        maxLength={500}\r\n        className=\"border border-gray-300 rounded-lg p-3 text-sm focus:ring-2 focus:ring-udlaverso-verde outline-none resize-none\"\r\n        rows={4}\r\n      />\r\n\r\n      <div className=\"flex justify-end\">\r\n        <button\r\n          type=\"submit\"\r\n          className=\"bg-udlaverso-verde text-white px-6 py-2 rounded-full text-sm font-semibold hover:bg-udlaverso-verdeOscuro transition\"\r\n        >\r\n          Publicar reseña\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FormularioResenia;\r\n",
          "GaleriaProyecto.tsx": "import { useState, useEffect } from \"react\";\r\nimport ImagenPrincipal from \"../molecules/ImagenPrincipal\";\r\nimport ListaMiniaturas from \"../molecules/ListaMiniaturas\";\r\n\r\ninterface Props {\r\n  imagenes: string[];\r\n}\r\n\r\nconst GaleriaProyecto: React.FC<Props> = ({ imagenes }) => {\r\n  const [indice, setIndice] = useState(0);\r\n\r\n  // Navegación con flechas del teclado\r\n  useEffect(() => {\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      if (e.key === \"ArrowRight\")\r\n        setIndice((prev) => (prev + 1) % imagenes.length);\r\n      if (e.key === \"ArrowLeft\")\r\n        setIndice((prev) => (prev - 1 + imagenes.length) % imagenes.length);\r\n    };\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n  }, [imagenes.length]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-4 select-none\">\r\n      <ImagenPrincipal\r\n        imagen={imagenes[indice]}\r\n        onAnterior={() =>\r\n          setIndice((prev) => (prev - 1 + imagenes.length) % imagenes.length)\r\n        }\r\n        onSiguiente={() => setIndice((prev) => (prev + 1) % imagenes.length)}\r\n        mostrarControles={imagenes.length > 1}\r\n      />\r\n\r\n      <ListaMiniaturas\r\n        imagenes={imagenes}\r\n        activa={indice}\r\n        onSeleccionar={setIndice}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GaleriaProyecto;\r\n",
          "ImagenPrincipal.tsx": "import BotonNavegacion from \"../atoms/BotonNavegacion\";\r\n\r\ninterface Props {\r\n  imagen: string;\r\n  onAnterior: () => void;\r\n  onSiguiente: () => void;\r\n  mostrarControles: boolean;\r\n}\r\n\r\nconst ImagenPrincipal: React.FC<Props> = ({\r\n  imagen,\r\n  onAnterior,\r\n  onSiguiente,\r\n  mostrarControles,\r\n}) => (\r\n  <div className=\"relative w-full h-72 md:h-96 overflow-hidden rounded-xl shadow-md\">\r\n    <img\r\n      src={imagen}\r\n      alt=\"Vista principal\"\r\n      className=\"w-full h-full object-cover transition-all duration-500 select-none pointer-events-none\"\r\n      draggable={false}\r\n    />\r\n    {mostrarControles && (\r\n      <>\r\n        <BotonNavegacion direccion=\"izquierda\" onClick={onAnterior} />\r\n        <BotonNavegacion direccion=\"derecha\" onClick={onSiguiente} />\r\n      </>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default ImagenPrincipal;\r\n",
          "InfoProyecto.tsx": "import BloqueAutorFecha from \"../molecules/BloqueAutorFecha\";\r\nimport ListaTecnologias from \"../molecules/ListaTecnologias\";\r\nimport BloqueDescripcion from \"../molecules/BloqueDescripcion\";\r\nimport BloqueObjetivos from \"../molecules/BloqueObjetivos\";\r\n\r\ninterface Props {\r\n  autor: string;\r\n  fecha: string;\r\n  tecnologias: string[];\r\n  descripcionCorta: string;\r\n  objetivos: string;\r\n}\r\n\r\nconst InfoProyecto: React.FC<Props> = ({\r\n  autor,\r\n  fecha,\r\n  tecnologias,\r\n  descripcionCorta,\r\n  objetivos,\r\n}) => (\r\n  <div className=\"space-y-4 font-inter text-base text-udlaverso-gris leading-relaxed\">\r\n    <BloqueAutorFecha autor={autor} fecha={fecha} />\r\n\r\n    <ListaTecnologias tecnologias={tecnologias} />\r\n\r\n    <BloqueDescripcion descripcion={descripcionCorta} />\r\n\r\n    <BloqueObjetivos objetivos={objetivos} />\r\n  </div>\r\n);\r\n\r\nexport default InfoProyecto;\r\n",
          "ListaMiniaturas.tsx": "import { useRef, useEffect } from \"react\";\r\nimport Miniatura from \"../atoms/Miniatura\";\r\n\r\ninterface Props {\r\n  imagenes: string[];\r\n  activa: number;\r\n  onSeleccionar: (i: number) => void;\r\n}\r\n\r\nconst ListaMiniaturas: React.FC<Props> = ({\r\n  imagenes,\r\n  activa,\r\n  onSeleccionar,\r\n}) => {\r\n  const contenedorRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Permitir arrastre horizontal (swipe con mouse)\r\n  useEffect(() => {\r\n    const contenedor = contenedorRef.current;\r\n    if (!contenedor) return;\r\n\r\n    let isDragging = false;\r\n    let startX = 0;\r\n    let scrollLeft = 0;\r\n\r\n    const onMouseDown = (e: MouseEvent) => {\r\n      isDragging = true;\r\n      contenedor.classList.add(\"cursor-grabbing\");\r\n      startX = e.pageX - contenedor.offsetLeft;\r\n      scrollLeft = contenedor.scrollLeft;\r\n    };\r\n\r\n    const onMouseMove = (e: MouseEvent) => {\r\n      if (!isDragging) return;\r\n      e.preventDefault();\r\n      const x = e.pageX - contenedor.offsetLeft;\r\n      const walk = (x - startX) * 1.5;\r\n      contenedor.scrollLeft = scrollLeft - walk;\r\n    };\r\n\r\n    const onMouseUp = () => {\r\n      isDragging = false;\r\n      contenedor.classList.remove(\"cursor-grabbing\");\r\n    };\r\n\r\n    const onMouseLeave = onMouseUp;\r\n\r\n    contenedor.addEventListener(\"mousedown\", onMouseDown);\r\n    contenedor.addEventListener(\"mousemove\", onMouseMove);\r\n    contenedor.addEventListener(\"mouseup\", onMouseUp);\r\n    contenedor.addEventListener(\"mouseleave\", onMouseLeave);\r\n\r\n    // Bloquear arrastre nativo de imágenes\r\n    const imgs = contenedor.querySelectorAll(\"img\");\r\n    imgs.forEach((img) =>\r\n      img.addEventListener(\"dragstart\", (e) => e.preventDefault())\r\n    );\r\n\r\n    return () => {\r\n      contenedor.removeEventListener(\"mousedown\", onMouseDown);\r\n      contenedor.removeEventListener(\"mousemove\", onMouseMove);\r\n      contenedor.removeEventListener(\"mouseup\", onMouseUp);\r\n      contenedor.removeEventListener(\"mouseleave\", onMouseLeave);\r\n      imgs.forEach((img) =>\r\n        img.removeEventListener(\"dragstart\", (e) => e.preventDefault())\r\n      );\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <div\r\n        ref={contenedorRef}\r\n        className=\"flex gap-3 overflow-x-auto no-scrollbar cursor-grab\"\r\n        style={{\r\n          overflowY: \"hidden\",\r\n          scrollbarWidth: \"none\",\r\n          msOverflowStyle: \"none\",\r\n        }}\r\n      >\r\n        {imagenes.map((img, i) => (\r\n          <Miniatura\r\n            key={i}\r\n            src={img}\r\n            activa={i === activa}\r\n            onClick={() => onSeleccionar(i)}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      {/* Gradientes laterales */}\r\n      {imagenes.length > 4 && (\r\n        <>\r\n          <div className=\"absolute left-0 top-0 h-full w-10 bg-gradient-to-r from-white via-white/60 to-transparent pointer-events-none\" />\r\n          <div className=\"absolute right-0 top-0 h-full w-10 bg-gradient-to-l from-white via-white/60 to-transparent pointer-events-none\" />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListaMiniaturas;\r\n",
          "ListaTecnologias.tsx": "import EtiquetaTecnologia from \"../atoms/EtiquetaTecnologia\";\r\n\r\ninterface Props {\r\n  tecnologias: string[];\r\n}\r\n\r\nconst ListaTecnologias: React.FC<Props> = ({ tecnologias }) => (\r\n  <div>\r\n    <p className=\"text-udlaverso-negro font-medium mb-1\">\r\n      Tecnologías utilizadas:\r\n    </p>\r\n    <div className=\"flex flex-wrap gap-2\">\r\n      {tecnologias.map((tec, i) => (\r\n        <EtiquetaTecnologia key={i} texto={tec} />\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default ListaTecnologias;\r\n",
          "ModalResenia.tsx": "import BotonCierreModal from \"../atoms/BotonCierreModal\";\r\nimport FormularioResenia from \"./FormularioResenia\";\r\n\r\ninterface Props {\r\n  onClose: () => void;\r\n  onSubmit: (usuario: string, comentario: string, estrellas: number) => void;\r\n}\r\n\r\nconst ModalResenia: React.FC<Props> = ({ onClose, onSubmit }) => (\r\n  <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\r\n    <div className=\"bg-white rounded-2xl w-[90%] md:w-[500px] p-6 shadow-xl relative animate-fadeIn\">\r\n      <BotonCierreModal onClose={onClose} />\r\n\r\n      <h3 className=\"text-xl font-semibold text-udlaverso-negro mb-2\">\r\n        Escribe tu reseña\r\n      </h3>\r\n\r\n      <p className=\"text-sm text-udlaverso-gris mb-4\">\r\n        Tu opinión será visible públicamente.\r\n      </p>\r\n\r\n      <FormularioResenia onSubmit={onSubmit} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default ModalResenia;\r\n",
          "TarjetaProyectoListado.tsx": "import React, { useState, useEffect } from \"react\";\r\nimport ImagenProyecto from \"../atoms/ImagenProyecto\";\r\nimport CategoriaChip from \"../atoms/CategoriaChip\";\r\n\r\ninterface Props {\r\n  titulo: string;\r\n  resumen: string;\r\n  imagenes: string[];\r\n  categorias?: string[];\r\n}\r\n\r\nconst TarjetaProyectoListado: React.FC<Props> = ({\r\n  titulo,\r\n  resumen,\r\n  imagenes,\r\n  categorias = [],\r\n}) => {\r\n  const [indice, setIndice] = useState(0);\r\n  const [hover, setHover] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let intervalo: ReturnType<typeof setInterval>;\r\n    if (hover && imagenes.length > 1) {\r\n      intervalo = setInterval(\r\n        () => setIndice((prev) => (prev + 1) % imagenes.length),\r\n        1500\r\n      );\r\n    }\r\n    return () => clearInterval(intervalo);\r\n  }, [hover, imagenes.length]);\r\n\r\n  const slug = encodeURIComponent(titulo.toLowerCase().replace(/\\s+/g, \"-\"));\r\n\r\n  return (\r\n    <article\r\n      className=\"bg-white rounded-xl border border-gray-200 shadow-sm hover:shadow-md transition-all duration-300 overflow-hidden cursor-pointer\"\r\n      onClick={() => window.open(`/proyectos/${slug}`, \"_blank\")}\r\n      onMouseEnter={() => setHover(true)}\r\n      onMouseLeave={() => {\r\n        setHover(false);\r\n        setIndice(0);\r\n      }}\r\n    >\r\n      <div className=\"relative w-full h-40 md:h-44\">\r\n        {imagenes.map((img, i) => (\r\n          <ImagenProyecto\r\n            key={i}\r\n            src={img}\r\n            alt={`${titulo} imagen ${i + 1}`}\r\n            visible={i === indice}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"p-4\">\r\n        <h3 className=\"text-lg font-semibold text-udlaverso-negro\">{titulo}</h3>\r\n\r\n        {categorias.length > 0 && (\r\n          <div className=\"flex flex-wrap gap-2 mt-2\">\r\n            {categorias.slice(0, 3).map((cat, i) => (\r\n              <CategoriaChip key={i} texto={cat} />\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <p className=\"text-sm text-udlaverso-gris mt-1 line-clamp-2\">\r\n          {resumen}\r\n        </p>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default TarjetaProyectoListado;\r\n",
          "TarjetaResenia.tsx": "import Estrella from \"../atoms/Estrella\";\r\nimport AvatarUsuario from \"../atoms/AvatarUsuario\";\r\n\r\ninterface Props {\r\n  usuario: string;\r\n  comentario: string;\r\n  estrellas: number;\r\n  fecha: string;\r\n}\r\n\r\nconst TarjetaResenia: React.FC<Props> = ({\r\n  usuario,\r\n  comentario,\r\n  estrellas,\r\n  fecha,\r\n}) => (\r\n  <div className=\"p-5 border border-gray-100 rounded-xl shadow-sm hover:shadow-md transition bg-white\">\r\n    <div className=\"flex items-center gap-3 mb-2\">\r\n      <AvatarUsuario nombre={usuario} />\r\n\r\n      <div className=\"flex flex-col\">\r\n        <p className=\"font-semibold text-udlaverso-negro\">{usuario}</p>\r\n        <p className=\"text-xs text-gray-400\">{fecha}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"flex gap-1 mb-2\">\r\n      {[...Array(5)].map((_, i) => (\r\n        <Estrella key={i} activa={i < estrellas} interactiva={false} />\r\n      ))}\r\n    </div>\r\n\r\n    <p className=\"text-[14px] text-udlaverso-gris leading-relaxed\">\r\n      {comentario}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default TarjetaResenia;\r\n",
          "TituloAccionProyecto.tsx": "import React from \"react\";\r\nimport TituloProyecto from \"../atoms/TituloProyecto\";\r\nimport Boton from \"../../Shared/atoms/Boton\";\r\n\r\ninterface Props {\r\n  titulo: string;\r\n  linkProyecto: string;\r\n}\r\n\r\nconst TituloAccionProyecto: React.FC<Props> = ({ titulo, linkProyecto }) => {\r\n  const abrirProyecto = () => window.open(linkProyecto, \"_blank\");\r\n\r\n  return (\r\n    <div className=\"flex justify-between items-start md:items-center gap-4\">\r\n      <TituloProyecto texto={titulo} />\r\n\r\n      <Boton\r\n        texto=\"Visitar proyecto\"\r\n        onClick={abrirProyecto}\r\n        variante=\"principal\"\r\n        claseExtra=\"shadow-sm\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TituloAccionProyecto;\r\n",
          "VideoProyecto.tsx": "interface Props {\r\n  videoUrl: string;\r\n  titulo: string;\r\n}\r\n\r\nconst VideoProyecto: React.FC<Props> = ({ videoUrl, titulo }) => (\r\n  <section className=\"space-y-3\">\r\n    <h2 className=\"text-xl font-semibold text-udlaverso-negro\">\r\n      {`Presentación de ${titulo}`}\r\n    </h2>\r\n\r\n    <div className=\"aspect-video w-full rounded-2xl overflow-hidden shadow-xl border border-white/30\">\r\n      <iframe\r\n        src={videoUrl}\r\n        title={titulo}\r\n        className=\"w-full h-full\"\r\n        allowFullScreen\r\n      ></iframe>\r\n    </div>\r\n  </section>\r\n);\r\n\r\nexport default VideoProyecto;\r\n"
        },
        "organisms": {
          "ContenidoProyecto.tsx": "import GaleriaProyecto from \"../molecules/GaleriaProyecto\";\r\nimport InfoProyecto from \"../molecules/InfoProyecto\";\r\nimport DescripcionLarga from \"../molecules/DescripcionLarga\";\r\nimport VideoProyecto from \"../molecules/VideoProyecto\";\r\n\r\ninterface Props {\r\n  autor: string;\r\n  fecha: string;\r\n  tecnologias: string[];\r\n  descripcionCorta: string;\r\n  descripcionLarga: string;\r\n  objetivos: string;\r\n  palabrasClave: string[];\r\n  imagenes: string[];\r\n  video: string;\r\n  titulo: string;\r\n}\r\n\r\nconst ContenidoProyecto: React.FC<Props> = ({\r\n  autor,\r\n  fecha,\r\n  tecnologias,\r\n  descripcionCorta,\r\n  descripcionLarga,\r\n  objetivos,\r\n  imagenes,\r\n  video,\r\n  titulo,\r\n}) => (\r\n  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-10 mt-8 items-start\">\r\n    {/* Galería fija */}\r\n    <div className=\"order-1 md:order-1 md:sticky md:top-28 self-start h-fit\">\r\n      <GaleriaProyecto imagenes={imagenes} />\r\n    </div>\r\n\r\n    {/* Contenido desplazable */}\r\n    <div className=\"order-2 md:order-2 space-y-8\">\r\n      <InfoProyecto\r\n        autor={autor}\r\n        tecnologias={tecnologias}\r\n        fecha={fecha}\r\n        descripcionCorta={descripcionCorta}\r\n        objetivos={objetivos}\r\n      />\r\n\r\n      <DescripcionLarga descripcion={descripcionLarga} />\r\n\r\n      <VideoProyecto videoUrl={video} titulo={titulo} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default ContenidoProyecto;\r\n",
          "DetalleProyecto.tsx": "import TituloAccionProyecto from \"../molecules/TituloAccionProyecto\";\r\nimport CategoriaSocialProyecto from \"../molecules/CategoriaSocialProyecto\";\r\nimport EstrellasValoracion from \"../molecules/EstrellasValoracion\";\r\nimport ContadorVisitas from \"../atoms/ContadorVisitas\";\r\nimport ContenidoProyecto from \"./ContenidoProyecto\";\r\nimport ReseniasProyecto from \"./ReseniasProyecto\";\r\n\r\ninterface Props {\r\n  titulo: string;\r\n  categoria: string;\r\n  promedio: number;\r\n  visitas: number;\r\n  autor: string;\r\n  tecnologias: string[];\r\n  fecha: string;\r\n  descripcionCorta: string;\r\n  descripcionLarga: string;\r\n  objetivos: string;\r\n  linkProyecto: string;\r\n  palabrasClave: string[];\r\n  imagenes: string[];\r\n  video: string;\r\n  resenias?: {\r\n    usuario: string;\r\n    comentario: string;\r\n    estrellas: number;\r\n    fecha: string;\r\n  }[];\r\n}\r\n\r\nconst DetalleProyecto: React.FC<Props> = ({\r\n  titulo,\r\n  categoria,\r\n  promedio,\r\n  visitas,\r\n  autor,\r\n  tecnologias,\r\n  fecha,\r\n  descripcionCorta,\r\n  descripcionLarga,\r\n  objetivos,\r\n  linkProyecto,\r\n  palabrasClave,\r\n  imagenes,\r\n  video,\r\n  resenias = [],\r\n}) => {\r\n  return (\r\n    <section className=\"max-w-7xl mx-auto px-6 md:px-10 py-10 bg-white rounded-2xl shadow-sm -mt-10 relative z-10\">\r\n      <TituloAccionProyecto titulo={titulo} linkProyecto={linkProyecto} />\r\n\r\n      <CategoriaSocialProyecto categoria={categoria} titulo={titulo} />\r\n\r\n      <div className=\"flex items-center gap-2 mt-2\">\r\n        <EstrellasValoracion valor={promedio} interactiva={false} />\r\n        <ContadorVisitas visitas={visitas} />\r\n      </div>\r\n\r\n      <ContenidoProyecto\r\n        titulo={titulo}\r\n        autor={autor}\r\n        fecha={fecha}\r\n        tecnologias={tecnologias}\r\n        descripcionCorta={descripcionCorta}\r\n        descripcionLarga={descripcionLarga}\r\n        objetivos={objetivos}\r\n        palabrasClave={palabrasClave}\r\n        imagenes={imagenes}\r\n        video={video}\r\n      />\r\n\r\n      <ReseniasProyecto resenias={resenias} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default DetalleProyecto;\r\n",
          "GridProyectos.tsx": "import TarjetaProyectoListado from \"../molecules/TarjetaProyectoListado\";\r\n\r\nexport interface Proyecto {\r\n  id: number;\r\n  titulo: string;\r\n  resumen: string;\r\n  categorias: string[];\r\n  imagen1: string;\r\n  imagen2: string;\r\n  imagen3: string;\r\n}\r\n\r\ninterface Props {\r\n  proyectos: Proyecto[];\r\n}\r\n\r\nconst GridProyectos: React.FC<Props> = ({ proyectos }) => {\r\n  if (!proyectos.length) {\r\n    return (\r\n      <div className=\"bg-white border border-gray-200 rounded-xl p-6 text-center text-udlaverso-gris mt-6\">\r\n        No hay proyectos disponibles.\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 mt-6\">\r\n      {proyectos.map((p) => (\r\n        <TarjetaProyectoListado\r\n          key={p.id}\r\n          titulo={p.titulo}\r\n          resumen={p.resumen}\r\n          categorias={p.categorias}\r\n          imagenes={[p.imagen1, p.imagen2, p.imagen3]}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GridProyectos;\r\n",
          "HeroProyectoIndividual.tsx": "import ContenidoHero from \"../../Shared/molecules/ContenidoHero\";\r\n\r\ninterface Props {\r\n  titulo: string;\r\n  descripcion: string;\r\n  imagenFondo: string;\r\n}\r\n\r\nconst HeroProyectoIndividual: React.FC<Props> = ({\r\n  titulo,\r\n  descripcion,\r\n  imagenFondo,\r\n}) => (\r\n  <section className=\"relative h-[45vh] md:h-[55vh] flex items-center justify-center text-white\">\r\n    <img\r\n      src={imagenFondo}\r\n      alt={titulo}\r\n      className=\"absolute inset-0 w-full h-full object-cover -z-10\"\r\n    />\r\n    <div className=\"absolute inset-0 bg-black/60 -z-10\" />\r\n    <ContenidoHero titulo={titulo} descripcion={descripcion} />\r\n  </section>\r\n);\r\n\r\nexport default HeroProyectoIndividual;\r\n",
          "HeroProyectos.tsx": "import ContenidoHero from \"../../Shared/molecules/ContenidoHero\";\r\n\r\nconst HeroProyectos: React.FC = () => {\r\n  return (\r\n    <section className=\"relative h-[45vh] md:h-[55vh] flex items-center justify-center overflow-hidden text-white\">\r\n      <img\r\n        src=\"/images/puente.webp\"\r\n        alt=\"Nuestros Proyectos\"\r\n        className=\"absolute inset-0 w-full h-full object-cover -z-10\"\r\n      />\r\n\r\n      <div className=\"absolute inset-0 bg-gradient-to-b from-black/70 via-black/50 to-black/70 -z-10\" />\r\n\r\n      <ContenidoHero\r\n        titulo=\"Nuestros Proyectos\"\r\n        descripcion=\"Explora iniciativas en RA desarrolladas por estudiantes y docentes. Filtra por categoría y descubre experiencias inmersivas.\"\r\n        textoBotonPrincipal=\"Descargar visor\"\r\n        linkBotonPrincipal=\"/descargas\"\r\n        textoBotonSecundario=\"Acerca del UdlaVerso\"\r\n        linkBotonSecundario=\"/acerca-de\"\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default HeroProyectos;\r\n",
          "ReseniasProyecto.tsx": "import { useState } from \"react\";\r\nimport TarjetaResenia from \"../molecules/TarjetaResenia\";\r\nimport ModalResenia from \"../molecules/ModalResenia\";\r\nimport Boton from \"../../Shared/atoms/Boton\";\r\n\r\ninterface Resenia {\r\n  usuario: string;\r\n  comentario: string;\r\n  estrellas: number;\r\n  fecha: string;\r\n}\r\n\r\ninterface Props {\r\n  resenias: Resenia[];\r\n}\r\n\r\nconst ReseniasProyecto: React.FC<Props> = ({ resenias: iniciales }) => {\r\n  const [resenias, setResenias] = useState(iniciales);\r\n  const [mostrarModal, setMostrarModal] = useState(false);\r\n\r\n  const agregarResenia = (\r\n    usuario: string,\r\n    comentario: string,\r\n    estrellas: number\r\n  ) => {\r\n    const nueva = {\r\n      usuario,\r\n      comentario,\r\n      estrellas,\r\n      fecha: new Date().toLocaleDateString(\"es-ES\", {\r\n        day: \"numeric\",\r\n        month: \"long\",\r\n        year: \"numeric\",\r\n      }),\r\n    };\r\n    setResenias([nueva, ...resenias]);\r\n    setMostrarModal(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-14 bg-white rounded-2xl p-8 shadow-md border border-gray-200\">\r\n      {/* Encabezado */}\r\n      <div className=\"flex flex-col md:flex-row md:items-center md:justify-between mb-6\">\r\n        <div>\r\n          <h3 className=\"text-2xl font-semibold text-udlaverso-negro\">\r\n            Calificaciones y reseñas\r\n          </h3>\r\n          <p className=\"text-sm text-udlaverso-gris\">\r\n            Comparte tu experiencia con otros usuarios.\r\n          </p>\r\n        </div>\r\n\r\n        <Boton\r\n          texto=\"Escribe una reseña\"\r\n          onClick={() => setMostrarModal(true)}\r\n          variante=\"alternativo\"\r\n          modo=\"light\"\r\n          claseExtra=\"mt-4 md:mt-0 shadow-sm\"\r\n        />\r\n      </div>\r\n\r\n      {/* Lista de reseñas */}\r\n      {resenias.length ? (\r\n        <div className=\"space-y-4\">\r\n          {resenias.map((r, i) => (\r\n            <TarjetaResenia key={i} {...r} />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p className=\"text-sm text-gray-500 text-center py-4\">\r\n          Aún no hay reseñas. ¡Sé el primero en opinar!\r\n        </p>\r\n      )}\r\n\r\n      {/* Modal */}\r\n      {mostrarModal && (\r\n        <ModalResenia\r\n          onClose={() => setMostrarModal(false)}\r\n          onSubmit={agregarResenia}\r\n        />\r\n      )}\r\n\r\n      <style>{`\r\n        @keyframes fadeIn {\r\n          from { opacity: 0; transform: translateY(10px); }\r\n          to { opacity: 1; transform: translateY(0); }\r\n        }\r\n        .animate-fadeIn {\r\n          animation: fadeIn 0.3s ease-out;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReseniasProyecto;\r\n"
        },
        "templates": {
          "ProyectoTemplate.tsx": "import DetalleProyecto from \"../organisms/DetalleProyecto\";\r\n\r\ninterface Proyecto {\r\n  id: string;\r\n  titulo: string;\r\n  categoria: string;\r\n  promedio: number;\r\n  visitas: number;\r\n  autor: string;\r\n  tecnologias: string[];\r\n  fecha: string;\r\n  descripcionCorta: string;\r\n  descripcionLarga: string;\r\n  objetivos: string;\r\n  linkProyecto: string;\r\n  palabrasClave: string[];\r\n  imagenes: string[];\r\n  video: string;\r\n  resenias?: {\r\n    usuario: string;\r\n    comentario: string;\r\n    estrellas: number;\r\n    fecha: string;\r\n  }[];\r\n}\r\n\r\ninterface Props {\r\n  proyecto: Proyecto;\r\n}\r\n\r\nconst ProyectoTemplate: React.FC<Props> = ({ proyecto }) => (\r\n  <DetalleProyecto {...proyecto} />\r\n);\r\n\r\nexport default ProyectoTemplate;\r\n"
        }
      }
    },
    "pages": {
      "Admin": {
        "Proyectos": {
          "AdminNuevoProyecto.tsx": "import { useState } from \"react\";\r\nimport Stepper from \"../../../components/Admin/molecules/Stepper\";\r\nimport PasoDatosBasicos from \"../../../components/Admin/organisms/PasoDatosBasicos\";\r\nimport PasoContenido from \"../../../components/Admin/organisms/PasoContenido\";\r\nimport PasoImagenes from \"../../../components/Admin/organisms/PasoImagenes\";\r\nimport PasoRevision from \"../../../components/Admin/organisms/PasoRevision\";\r\nimport BotonAdmin from \"../../../components/Admin/atoms/BotonAdmin\";\r\n\r\nconst AdminNuevoProyecto = () => {\r\n  const [paso, setPaso] = useState(1);\r\n  const totalPasos = 4;\r\n\r\n  const siguiente = () => paso < totalPasos && setPaso(paso + 1);\r\n  const anterior = () => paso > 1 && setPaso(paso - 1);\r\n\r\n  return (\r\n    <section className=\"p-6 bg-white rounded-xl shadow-md space-y-6\">\r\n      <h1 className=\"text-xl md:text-2xl font-bold text-udlaverso-negro\">\r\n        Agregar Proyecto\r\n      </h1>\r\n\r\n      <Stepper pasoActual={paso} total={totalPasos} />\r\n\r\n      {/* Pasos */}\r\n      {paso === 1 && <PasoDatosBasicos />}\r\n      {paso === 2 && <PasoContenido />}\r\n      {paso === 3 && <PasoImagenes />}\r\n      {paso === 4 && <PasoRevision />}\r\n\r\n      {/* Controles */}\r\n      <div className=\"flex justify-between mt-6\">\r\n        {paso > 1 ? (\r\n          <BotonAdmin texto=\"Volver\" onClick={anterior} variante=\"secundario\" />\r\n        ) : (\r\n          <div />\r\n        )}\r\n        {paso < totalPasos ? (\r\n          <BotonAdmin texto=\"Siguiente\" onClick={siguiente} />\r\n        ) : (\r\n          <BotonAdmin\r\n            texto=\"Guardar proyecto\"\r\n            onClick={() => alert(\"Proyecto guardado\")}\r\n            variante=\"principal\"\r\n          />\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AdminNuevoProyecto;\r\n"
        }
      },
      "Proyectos": {
        "ProyectoDetalle.tsx": "import { useParams } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport HeroProyectoIndividual from \"../../components/Proyectos/organisms/HeroProyectoIndividual\";\r\nimport DetalleProyecto from \"../../components/Proyectos/organisms/DetalleProyecto\";\r\n\r\nconst proyectos = [\r\n  {\r\n    id: \"1\",\r\n    titulo: \"Laboratorio IoT\",\r\n    categoria: \"Tecnología\",\r\n    promedio: 2.7,\r\n    visitas: 124,\r\n    autor: \"Jhoan Sebastián Sierra Perdomo\",\r\n    tecnologias: [\"Unity\", \"Blender\", \"OpenSim\"],\r\n    palabrasClave: [\"IoT\", \"RA\", \"Educación\", \"Simulación\", \"Innovación\"],\r\n    fecha: \"Junio 2024\",\r\n    descripcionCorta:\r\n      \"El Laboratorio IoT es un entorno interactivo en realidad aumentada diseñado para la enseñanza práctica de IoT en la Universidad de la Amazonia.\",\r\n    descripcionLarga: `\r\n    <b>El Laboratorio IoT</b> es un proyecto educativo innovador que permite a los estudiantes explorar la interconexión de dispositivos inteligentes mediante <b>simulaciones en realidad aumentada (RA)</b>.\r\n\r\n    Su entorno reproduce con precisión diversos <b>sensores, actuadores y redes en tiempo real</b>, ofreciendo una comprensión profunda del ecosistema del Internet de las Cosas (IoT). Gracias a esta experiencia inmersiva, los participantes pueden visualizar y analizar cómo los dispositivos comunican datos y reaccionan entre sí dentro de un entorno virtual controlado.\r\n\r\n    <b>Objetivos principales:</b>\r\n    <ul>\r\n      <li>Fomentar el aprendizaje práctico del IoT a través de entornos virtuales interactivos.</li>\r\n      <li>Impulsar la innovación tecnológica aplicada a la educación en la región amazónica.</li>\r\n      <li>Facilitar la comprensión de conceptos complejos mediante la experimentación visual.</li>\r\n    </ul>\r\n    Durante su desarrollo se emplearon <b>modelado 3D</b>, <b>animaciones interactivas</b> y <b>programación por nodos</b> para recrear escenarios donde los estudiantes pueden conectar sensores virtuales, activar actuadores y observar respuestas en tiempo real. Este enfoque no solo estimula la curiosidad científica, sino que también promueve el trabajo colaborativo y la resolución de problemas.\r\n\r\n    El proyecto forma parte del ecosistema de innovación digital de la <b>Universidad de la Amazonia</b>, contribuyendo al fortalecimiento de la formación tecnológica en la región. Su propósito a largo plazo es crear una plataforma abierta que pueda integrarse con otros laboratorios virtuales, permitiendo que más instituciones adopten herramientas similares.\r\n\r\n    <b>En resumen:</b> el Laboratorio IoT no solo es una simulación, sino una puerta hacia el aprendizaje interactivo y la transformación educativa digital, conectando la teoría con la práctica a través de experiencias inmersivas y significativas.\r\n    `,\r\n    objetivos:\r\n      \"Fomentar el aprendizaje de Internet de las Cosas mediante simulaciones interactivas y experiencias inmersivas.\",\r\n    linkProyecto: \"/descargas\",\r\n    video: \"https://www.youtube.com/embed/ScMzIvxBSi4\",\r\n    imagenes: [\r\n      \"/images/parque.webp\",\r\n      \"/images/bus.webp\",\r\n      \"/images/hero-acercade.webp\",\r\n      \"/images/puente.webp\",\r\n      \"/images/escenario.webp\",\r\n      \"/images/caseta.webp\",\r\n      \"/images/hero.webp\",\r\n    ],\r\n    resenias: [\r\n      {\r\n        usuario: \"Laura Gómez\",\r\n        comentario:\r\n          \"Excelente iniciativa, demuestra cómo la tecnología puede aplicarse de forma práctica en la educación universitaria.\",\r\n        estrellas: 5,\r\n        fecha: \"15 de julio de 2024\",\r\n      },\r\n      {\r\n        usuario: \"Carlos Rojas\",\r\n        comentario:\r\n          \"Muy útil para clases, facilita la comprensión de conceptos complejos de IoT mediante la simulación.\",\r\n        estrellas: 4,\r\n        fecha: \"2 de agosto de 2024\",\r\n      },\r\n      {\r\n        usuario: \"Mariana Pérez\",\r\n        comentario:\r\n          \"Un proyecto muy interesante y bien desarrollado. Me ayudó a visualizar cómo se comunican los dispositivos inteligentes en tiempo real.\",\r\n        estrellas: 5,\r\n        fecha: \"18 de septiembre de 2024\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst ProyectoDetalle: React.FC = () => {\r\n  const { nombre } = useParams();\r\n  const proyecto = proyectos.find(\r\n    (p) =>\r\n      encodeURIComponent(p.titulo.toLowerCase().replace(/\\s+/g, \"-\")) === nombre\r\n  );\r\n\r\n  if (!proyecto)\r\n    return (\r\n      <section className=\"flex flex-col items-center justify-center py-20\">\r\n        <p className=\"text-udlaverso-gris text-lg mb-4\">\r\n          No se encontró el proyecto solicitado.\r\n        </p>\r\n      </section>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{proyecto.titulo} - UdlaVerso</title>\r\n        <meta name=\"description\" content={proyecto.descripcionCorta} />\r\n      </Helmet>\r\n\r\n      <HeroProyectoIndividual\r\n        titulo={proyecto.titulo}\r\n        descripcion={proyecto.objetivos}\r\n        imagenFondo={proyecto.imagenes[0]}\r\n      />\r\n\r\n      <DetalleProyecto {...proyecto} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProyectoDetalle;\r\n",
        "Proyectos.tsx": "import { useMemo, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport HeroProyectos from \"../../components/Proyectos/organisms/HeroProyectos\";\r\nimport BarraFiltros from \"../../components/Proyectos/molecules/BarraFiltros\";\r\nimport GridProyectos from \"../../components/Proyectos/organisms/GridProyectos\";\r\nimport Paginacion from \"../../components/Shared/molecules/Paginacion\";\r\nimport { useCategorias } from \"../../components/Proyectos/hooks/useCategorias\";\r\nimport { proyectosMock } from \"../../components/Proyectos/mockData\";\r\n\r\nconst Proyectos: React.FC = () => {\r\n  const [categoria, setCategoria] = useState(\"Todas\");\r\n  const [busqueda, setBusqueda] = useState(\"\");\r\n  const [pagina, setPagina] = useState(1);\r\n  const porPagina = 9;\r\n\r\n  const { categorias } = useCategorias();\r\n\r\n  const opciones = [\"Todas\", ...categorias.map((c) => c.nombre)];\r\n\r\n  const filtrados = useMemo(() => {\r\n    let base =\r\n      categoria === \"Todas\"\r\n        ? proyectosMock\r\n        : proyectosMock.filter((p) => p.categorias.includes(categoria));\r\n\r\n    if (busqueda.trim()) {\r\n      base = base.filter(\r\n        (p) =>\r\n          p.titulo.toLowerCase().includes(busqueda.toLowerCase()) ||\r\n          p.resumen.toLowerCase().includes(busqueda.toLowerCase())\r\n      );\r\n    }\r\n\r\n    return base;\r\n  }, [categoria, busqueda]);\r\n\r\n  const totalPaginas = Math.ceil(filtrados.length / porPagina);\r\n  const visibles = filtrados.slice(\r\n    (pagina - 1) * porPagina,\r\n    pagina * porPagina\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Proyectos - UdlaVerso</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Listado de proyectos del UdlaVerso con filtros por categoría y paginación.\"\r\n        />\r\n      </Helmet>\r\n\r\n      <HeroProyectos />\r\n\r\n      <section className=\"max-w-7xl mx-auto px-6 md:px-8 -mt-10 relative z-10\">\r\n        <BarraFiltros\r\n          opciones={opciones}\r\n          seleccion={categoria}\r\n          onChange={(v) => {\r\n            setCategoria(v);\r\n            setPagina(1);\r\n          }}\r\n          total={filtrados.length}\r\n          busqueda={busqueda}\r\n          onBuscar={(v) => {\r\n            setBusqueda(v);\r\n            setPagina(1);\r\n          }}\r\n        />\r\n\r\n        <GridProyectos proyectos={visibles} />\r\n\r\n        <Paginacion\r\n          pagina={pagina}\r\n          totalPaginas={totalPaginas}\r\n          onChange={setPagina}\r\n          ariaLabel=\"Paginación de proyectos\"\r\n        />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Proyectos;\r\n"
      }
    }
  }
}